{
	"info": {
		"_postman_id": "1e766cc2-f968-4182-b523-4ef83c97e41f",
		"name": "Library Management System API",
		"description": "RESTful API for a comprehensive Library Management System. This API provides endpoints for managing books, authors, categories, book copies, members, loans, and system settings.\n\nContact Support:\n Name: Library Management Team\n Email: support@library-management.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "3712556"
	},
	"item": [
		{
			"name": "api",
			"item": [
				{
					"name": "members",
					"item": [
						{
							"name": "register",
							"item": [
								{
									"name": "Register a new member",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/members/register",
										"description": "Creates a new user account and member profile. Returns the created user, member profile, and JWT access/refresh tokens for immediate authentication."
									},
									"response": [
										{
											"name": "Member successfully registered",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/register"
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user\": {\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"email\": \"john.doe@example.com\",\n    \"role\": \"MEMBER\",\n    \"isActive\": true,\n    \"createdAt\": \"2015-05-20T10:20:48.320Z\",\n    \"updatedAt\": \"2004-01-30T15:25:00.539Z\"\n  },\n  \"memberProfile\": {\n    \"id\": \"bad3ab11-0843-df2d-92d7-de6693b43273\",\n    \"userId\": \"55a42595-ce12-df1f-5fee-aba42e9be084\",\n    \"membershipNumber\": \"LIB-2024-0001\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"string\",\n    \"membershipStatus\": \"ACTIVE\",\n    \"membershipStartDate\": \"1961-07-19T15:57:40.335Z\",\n    \"membershipEndDate\": \"2014-04-03T07:11:47.756Z\",\n    \"createdAt\": \"2001-02-25T07:21:03.857Z\",\n    \"updatedAt\": \"2017-05-29T08:53:28.438Z\"\n  },\n  \"accessToken\": \"string\",\n  \"refreshToken\": \"string\"\n}"
										},
										{
											"name": "Invalid input data or email already exists",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/register"
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 400,\n  \"message\": \"Email already exists\",\n  \"errors\": [\n    {\n      \"field\": \"email\",\n      \"message\": \"Email already exists\"\n    },\n    {\n      \"field\": \"email\",\n      \"message\": \"Email already exists\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "login",
							"item": [
								{
									"name": "Login with email and password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 200) {",
													"    var jsonData = pm.response.json();",
													"    pm.environment.set('bearerToken', jsonData.accessToken);",
													"    pm.environment.set('refreshToken', jsonData.refreshToken);",
													"}"
												],
												"type": "text/javascript",
												"packages": {},
												"requests": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"member@example.com\",\n  \"password\": \"Member@123\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/members/login",
										"description": "Authenticates a user with email and password. Returns JWT access and refresh tokens. Rate limited to 10 requests per minute to prevent brute force attacks."
									},
									"response": [
										{
											"name": "Login successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/login"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"user\": {\n    \"id\": \"2ab0c406-47fd-6add-193f-3d667e89a227\",\n    \"email\": \"Yq6DSktebgkbhf@qNCPTXPnkUsLXQyeb.bgar\",\n    \"role\": \"ADMIN\",\n    \"isActive\": false\n  },\n  \"memberProfile\": {},\n  \"accessToken\": \"string\",\n  \"refreshToken\": \"string\"\n}"
										},
										{
											"name": "Invalid credentials or account suspended",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/login"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid email or password\"\n}"
										},
										{
											"name": "Too many login attempts",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/login"
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 429,\n  \"message\": \"Too Many Requests\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "refresh",
							"item": [
								{
									"name": "Refresh access and refresh tokens",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/members/refresh",
										"description": "Uses a valid refresh token to generate new access and refresh tokens. The old refresh token is revoked after successful refresh."
									},
									"response": [
										{
											"name": "Tokens refreshed successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/refresh"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"accessToken\": \"string\",\n  \"refreshToken\": \"string\"\n}"
										},
										{
											"name": "Invalid or expired refresh token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/refresh"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid refresh token\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "logout",
							"item": [
								{
									"name": "Logout user",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/members/logout",
										"description": "Logs out the user by revoking their refresh token. The access token will remain valid until it expires (15 minutes)."
									},
									"response": [
										{
											"name": "Logout successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/logout"
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"Logout successful\"\n}"
										},
										{
											"name": "Invalid or expired refresh token",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": "{{baseUrl}}/api/members/logout"
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"statusCode\": 401,\n  \"message\": \"Unauthorized\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "activate",
									"item": [
										{
											"name": "Activate a member",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/members/:id/activate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"members",
														":id",
														"activate"
													],
													"variable": [
														{
															"key": "id",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Member profile UUID"
														}
													]
												},
												"description": "Changes member status from PENDING to ACTIVE. Admin only."
											},
											"response": [
												{
													"name": "Member activated successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/members/:id/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"members",
																":id",
																"activate"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Member not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/members/:id/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"members",
																":id",
																"activate"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Member already active",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/members/:id/activate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"members",
																":id",
																"activate"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "suspend",
									"item": [
										{
											"name": "Suspend a member",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"reason\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/members/:id/suspend",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"members",
														":id",
														"suspend"
													],
													"variable": [
														{
															"key": "id",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Member profile UUID"
														}
													]
												},
												"description": "Changes member status from ACTIVE to SUSPENDED. Admin only."
											},
											"response": [
												{
													"name": "Member suspended successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reason\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/members/:id/suspend",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"members",
																":id",
																"suspend"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Member not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reason\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/members/:id/suspend",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"members",
																":id",
																"suspend"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Member already suspended",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"reason\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/members/:id/suspend",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"members",
																":id",
																"suspend"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get member details",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/members/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"members",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Member profile UUID"
												}
											]
										},
										"description": "Retrieves detailed information about a specific member. Admin only."
									},
									"response": [
										{
											"name": "Member retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Member not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update member profile",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/members/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"members",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Member profile UUID"
												}
											]
										},
										"description": "Updates member profile information. Admin only."
									},
									"response": [
										{
											"name": "Member updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Member not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/members/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"members",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List all members",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=6713.337739687746&page=6713.337739687746",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"members"
									],
									"query": [
										{
											"key": "sortOrder",
											"value": "asc"
										},
										{
											"key": "sortBy",
											"value": "lastName"
										},
										{
											"key": "status",
											"value": "EXPIRED"
										},
										{
											"key": "q",
											"value": "string",
											"description": "Search by name or email"
										},
										{
											"key": "pageSize",
											"value": "6713.337739687746"
										},
										{
											"key": "page",
											"value": "6713.337739687746"
										}
									]
								},
								"description": "Retrieves a paginated list of members with loan statistics. Admin only."
							},
							"response": [
								{
									"name": "Members retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"members"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc"
												},
												{
													"key": "sortBy",
													"value": "lastName"
												},
												{
													"key": "status",
													"value": "EXPIRED"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search by name or email"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746"
												},
												{
													"key": "page",
													"value": "6713.337739687746"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"members"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc"
												},
												{
													"key": "sortBy",
													"value": "lastName"
												},
												{
													"key": "status",
													"value": "EXPIRED"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search by name or email"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746"
												},
												{
													"key": "page",
													"value": "6713.337739687746"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"members"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc"
												},
												{
													"key": "sortBy",
													"value": "lastName"
												},
												{
													"key": "status",
													"value": "EXPIRED"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search by name or email"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746"
												},
												{
													"key": "page",
													"value": "6713.337739687746"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "authors",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update an author",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"biography\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/authors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Author UUID"
												}
											]
										},
										"description": "Updates an existing author. Admin only."
									},
									"response": [
										{
											"name": "Author updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"biography\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input data",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"biography\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"biography\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"biography\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Author not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"biography\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete an author",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/authors/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authors",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Author UUID"
												}
											]
										},
										"description": "Deletes an author if not referenced by any books. Admin only."
									},
									"response": [
										{
											"name": "Author deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Author not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Author is referenced by books and cannot be deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/authors/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"authors",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List all authors",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/authors?sortOrder=asc&sortBy=createdAt&q=string&pageSize=6713.337739687746&page=6713.337739687746",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"authors"
									],
									"query": [
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort order"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field"
										},
										{
											"key": "q",
											"value": "string",
											"description": "Search query for author name"
										},
										{
											"key": "pageSize",
											"value": "6713.337739687746",
											"description": "Items per page (default: 10, max: 100)"
										},
										{
											"key": "page",
											"value": "6713.337739687746",
											"description": "Page number (default: 1)"
										}
									]
								},
								"description": "Retrieves a paginated list of authors with search and sorting."
							},
							"response": [
								{
									"name": "Authors retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/authors?sortOrder=asc&sortBy=createdAt&q=string&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authors"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort order"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Sort field"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search query for author name"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746",
													"description": "Items per page (default: 10, max: 100)"
												},
												{
													"key": "page",
													"value": "6713.337739687746",
													"description": "Page number (default: 1)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid query parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/authors?sortOrder=asc&sortBy=createdAt&q=string&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"authors"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort order"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Sort field"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search query for author name"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746",
													"description": "Items per page (default: 10, max: 100)"
												},
												{
													"key": "page",
													"value": "6713.337739687746",
													"description": "Page number (default: 1)"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new author",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"biography\": \"American novelist and short story writer\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/authors",
								"description": "Creates a new author. Admin only."
							},
							"response": [
								{
									"name": "Author created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"biography\": \"American novelist and short story writer\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/authors"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input data or author already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"biography\": \"American novelist and short story writer\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/authors"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"biography\": \"American novelist and short story writer\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/authors"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"biography\": \"American novelist and short story writer\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/authors"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Update a category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Category UUID"
												}
											]
										},
										"description": "Updates an existing category. Admin only."
									},
									"response": [
										{
											"name": "Category updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input data",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Category not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a category",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Category UUID"
												}
											]
										},
										"description": "Deletes a category if not referenced by any books. Admin only."
									},
									"response": [
										{
											"name": "Category deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Category not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Category is referenced by books and cannot be deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List all categories",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/categories?sortOrder=asc&sortBy=createdAt&q=string&pageSize=6713.337739687746&page=6713.337739687746",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"categories"
									],
									"query": [
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort order"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field"
										},
										{
											"key": "q",
											"value": "string",
											"description": "Search query for category name"
										},
										{
											"key": "pageSize",
											"value": "6713.337739687746",
											"description": "Items per page (default: 10, max: 100)"
										},
										{
											"key": "page",
											"value": "6713.337739687746",
											"description": "Page number (default: 1)"
										}
									]
								},
								"description": "Retrieves a paginated list of categories with search and sorting."
							},
							"response": [
								{
									"name": "Categories retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/categories?sortOrder=asc&sortBy=createdAt&q=string&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort order"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Sort field"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search query for category name"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746",
													"description": "Items per page (default: 10, max: 100)"
												},
												{
													"key": "page",
													"value": "6713.337739687746",
													"description": "Page number (default: 1)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid query parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/categories?sortOrder=asc&sortBy=createdAt&q=string&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"categories"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort order"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Sort field"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search query for category name"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746",
													"description": "Items per page (default: 10, max: 100)"
												},
												{
													"key": "page",
													"value": "6713.337739687746",
													"description": "Page number (default: 1)"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new category",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/categories",
								"description": "Creates a new category. Admin only."
							},
							"response": [
								{
									"name": "Category created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/categories"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input data or category already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/categories"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/categories"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/categories"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "books",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "copies",
									"item": [
										{
											"name": "List copies for a book",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=6713.337739687746&page=6713.337739687746",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id",
														"copies"
													],
													"query": [
														{
															"key": "status",
															"value": "ON_LOAN",
															"description": "Filter by copy status"
														},
														{
															"key": "pageSize",
															"value": "6713.337739687746",
															"description": "Items per page (default: 10, max: 100)"
														},
														{
															"key": "page",
															"value": "6713.337739687746",
															"description": "Page number (default: 1)"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Book UUID"
														}
													]
												},
												"description": "Retrieves all physical copies for a specific book. Admin only."
											},
											"response": [
												{
													"name": "Copies retrieved successfully",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=6713.337739687746&page=6713.337739687746",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"query": [
																{
																	"key": "status",
																	"value": "ON_LOAN",
																	"description": "Filter by copy status"
																},
																{
																	"key": "pageSize",
																	"value": "6713.337739687746",
																	"description": "Items per page (default: 10, max: 100)"
																},
																{
																	"key": "page",
																	"value": "6713.337739687746",
																	"description": "Page number (default: 1)"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=6713.337739687746&page=6713.337739687746",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"query": [
																{
																	"key": "status",
																	"value": "ON_LOAN",
																	"description": "Filter by copy status"
																},
																{
																	"key": "pageSize",
																	"value": "6713.337739687746",
																	"description": "Items per page (default: 10, max: 100)"
																},
																{
																	"key": "page",
																	"value": "6713.337739687746",
																	"description": "Page number (default: 1)"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authorized (ADMIN only)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=6713.337739687746&page=6713.337739687746",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"query": [
																{
																	"key": "status",
																	"value": "ON_LOAN",
																	"description": "Filter by copy status"
																},
																{
																	"key": "pageSize",
																	"value": "6713.337739687746",
																	"description": "Items per page (default: 10, max: 100)"
																},
																{
																	"key": "page",
																	"value": "6713.337739687746",
																	"description": "Page number (default: 1)"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Book not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=6713.337739687746&page=6713.337739687746",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"query": [
																{
																	"key": "status",
																	"value": "ON_LOAN",
																	"description": "Filter by copy status"
																},
																{
																	"key": "pageSize",
																	"value": "6713.337739687746",
																	"description": "Items per page (default: 10, max: 100)"
																},
																{
																	"key": "page",
																	"value": "6713.337739687746",
																	"description": "Page number (default: 1)"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Add copies to a book",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/books/:id/copies",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id",
														"copies"
													],
													"variable": [
														{
															"key": "id",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Book UUID"
														}
													]
												},
												"description": "Adds multiple physical copies to a book. Admin only."
											},
											"response": [
												{
													"name": "Copies added successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Invalid input data",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authenticated",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authorized (ADMIN only)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Book not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/books/:id/copies",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"books",
																":id",
																"copies"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get a book by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/books/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Book UUID"
												}
											]
										},
										"description": "Retrieves detailed information about a specific book including authors, categories, and copy availability."
									},
									"response": [
										{
											"name": "Book retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"book\": {\n    \"id\": \"255ef755-7bc0-eed2-b8d5-c12241162300\",\n    \"title\": \"string\",\n    \"subtitle\": \"string\",\n    \"description\": \"string\",\n    \"isbn\": \"string\",\n    \"publicationYear\": 7159.310717274203,\n    \"language\": \"string\",\n    \"coverImageUrl\": \"http://vcwdzQMErkViUwKJnWNk.qesZ523Wp2Im-pYPzDEBqbjDor0AY1Mw3kT79,yX,EYGhtqy4KYZpTlMBr+jgkr-V\",\n    \"status\": \"ARCHIVED\",\n    \"availableCopies\": 1480.2078232575223,\n    \"totalCopies\": 3069.5735321169605\n  }\n}"
										},
										{
											"name": "Book not found or archived",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a book",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 1654.4574913917018,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://ZIoSwHnKrQnohyKJBkoQxAC.lmbrk5DzxiE-zY6Mt4oYiCOxgBiqeVXuZyscEq9-\",\n  \"status\": \"ARCHIVED\",\n  \"authorIds\": [\n    \"8e7f14f3-b770-e196-54c9-992e930e0b76\",\n    \"9f74e39c-b989-1ce8-0b53-d908e4c294df\"\n  ],\n  \"categoryIds\": [\n    \"c9647592-5ffe-f97c-3077-8ad9e9802208\",\n    \"3723653a-7c1b-5b78-7ec9-894fd2f9de23\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/books/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Book UUID"
												}
											]
										},
										"description": "Updates an existing book. Admin only. All fields are optional."
									},
									"response": [
										{
											"name": "Book updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 1654.4574913917018,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://ZIoSwHnKrQnohyKJBkoQxAC.lmbrk5DzxiE-zY6Mt4oYiCOxgBiqeVXuZyscEq9-\",\n  \"status\": \"ARCHIVED\",\n  \"authorIds\": [\n    \"8e7f14f3-b770-e196-54c9-992e930e0b76\",\n    \"9f74e39c-b989-1ce8-0b53-d908e4c294df\"\n  ],\n  \"categoryIds\": [\n    \"c9647592-5ffe-f97c-3077-8ad9e9802208\",\n    \"3723653a-7c1b-5b78-7ec9-894fd2f9de23\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input data",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 1654.4574913917018,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://ZIoSwHnKrQnohyKJBkoQxAC.lmbrk5DzxiE-zY6Mt4oYiCOxgBiqeVXuZyscEq9-\",\n  \"status\": \"ARCHIVED\",\n  \"authorIds\": [\n    \"8e7f14f3-b770-e196-54c9-992e930e0b76\",\n    \"9f74e39c-b989-1ce8-0b53-d908e4c294df\"\n  ],\n  \"categoryIds\": [\n    \"c9647592-5ffe-f97c-3077-8ad9e9802208\",\n    \"3723653a-7c1b-5b78-7ec9-894fd2f9de23\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 1654.4574913917018,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://ZIoSwHnKrQnohyKJBkoQxAC.lmbrk5DzxiE-zY6Mt4oYiCOxgBiqeVXuZyscEq9-\",\n  \"status\": \"ARCHIVED\",\n  \"authorIds\": [\n    \"8e7f14f3-b770-e196-54c9-992e930e0b76\",\n    \"9f74e39c-b989-1ce8-0b53-d908e4c294df\"\n  ],\n  \"categoryIds\": [\n    \"c9647592-5ffe-f97c-3077-8ad9e9802208\",\n    \"3723653a-7c1b-5b78-7ec9-894fd2f9de23\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 1654.4574913917018,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://ZIoSwHnKrQnohyKJBkoQxAC.lmbrk5DzxiE-zY6Mt4oYiCOxgBiqeVXuZyscEq9-\",\n  \"status\": \"ARCHIVED\",\n  \"authorIds\": [\n    \"8e7f14f3-b770-e196-54c9-992e930e0b76\",\n    \"9f74e39c-b989-1ce8-0b53-d908e4c294df\"\n  ],\n  \"categoryIds\": [\n    \"c9647592-5ffe-f97c-3077-8ad9e9802208\",\n    \"3723653a-7c1b-5b78-7ec9-894fd2f9de23\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Book not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 1654.4574913917018,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://ZIoSwHnKrQnohyKJBkoQxAC.lmbrk5DzxiE-zY6Mt4oYiCOxgBiqeVXuZyscEq9-\",\n  \"status\": \"ARCHIVED\",\n  \"authorIds\": [\n    \"8e7f14f3-b770-e196-54c9-992e930e0b76\",\n    \"9f74e39c-b989-1ce8-0b53-d908e4c294df\"\n  ],\n  \"categoryIds\": [\n    \"c9647592-5ffe-f97c-3077-8ad9e9802208\",\n    \"3723653a-7c1b-5b78-7ec9-894fd2f9de23\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a book",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/books/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Book UUID"
												}
											]
										},
										"description": "Permanently deletes a book if it has no loan history. If loans exist, the book should be archived instead. Admin only."
									},
									"response": [
										{
											"name": "Book deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Book not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Book has loan history and cannot be deleted. Archive it instead.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/books/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"books",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "List all books",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/books?sortOrder=asc&sortBy=createdAt&availability=RESERVED&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"books"
									],
									"query": [
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort order (default: asc)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Sort field (default: relevance if searching, createdAt otherwise)"
										},
										{
											"key": "availability",
											"value": "RESERVED",
											"description": "Filter by availability status"
										},
										{
											"key": "categoryId",
											"value": "string",
											"description": "Filter by category UUID"
										},
										{
											"key": "authorId",
											"value": "string",
											"description": "Filter by author UUID"
										},
										{
											"key": "q",
											"value": "string",
											"description": "Search query for title and author name"
										},
										{
											"key": "pageSize",
											"value": "10",
											"description": "Items per page (default: 10, max: 100)"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number (default: 1)"
										}
									]
								},
								"description": "Retrieves a paginated list of books with support for search, filtering, and sorting. Public endpoint accessible without authentication."
							},
							"response": [
								{
									"name": "Books retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/books?sortOrder=asc&sortBy=createdAt&availability=RESERVED&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort order (default: asc)"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Sort field (default: relevance if searching, createdAt otherwise)"
												},
												{
													"key": "availability",
													"value": "RESERVED",
													"description": "Filter by availability status"
												},
												{
													"key": "categoryId",
													"value": "string",
													"description": "Filter by category UUID"
												},
												{
													"key": "authorId",
													"value": "string",
													"description": "Filter by author UUID"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search query for title and author name"
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "Items per page (default: 10, max: 100)"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number (default: 1)"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"books\": [\n    {\n      \"id\": \"93c72e17-0b1f-c3a4-e010-21a7a3919731\",\n      \"title\": \"The Great Gatsby\",\n      \"subtitle\": \"string\",\n      \"description\": \"string\",\n      \"isbn\": \"978-0743273565\",\n      \"publicationYear\": 1925,\n      \"language\": \"English\",\n      \"coverImageUrl\": \"http://axf.dqysmgH-+DB3qHJ9\",\n      \"status\": \"ACTIVE\",\n      \"availableCopies\": 3,\n      \"totalCopies\": 5\n    },\n    {\n      \"id\": \"0f88e5bd-0fa7-d8bd-9060-2227e4dee5d9\",\n      \"title\": \"The Great Gatsby\",\n      \"subtitle\": \"string\",\n      \"description\": \"string\",\n      \"isbn\": \"978-0743273565\",\n      \"publicationYear\": 1925,\n      \"language\": \"English\",\n      \"coverImageUrl\": \"http://WdGpxOctzyInMzUByPenSVofU.ucubIjBX03WB2kaanDDuL+VnInmWYDUqi2s-,UpHca+DO\",\n      \"status\": \"ACTIVE\",\n      \"availableCopies\": 3,\n      \"totalCopies\": 5\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 10,\n    \"totalItems\": 100,\n    \"totalPages\": 10\n  }\n}"
								},
								{
									"name": "Invalid query parameters",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/books?sortOrder=asc&sortBy=createdAt&availability=RESERVED&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"books"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort order (default: asc)"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Sort field (default: relevance if searching, createdAt otherwise)"
												},
												{
													"key": "availability",
													"value": "RESERVED",
													"description": "Filter by availability status"
												},
												{
													"key": "categoryId",
													"value": "string",
													"description": "Filter by category UUID"
												},
												{
													"key": "authorId",
													"value": "string",
													"description": "Filter by author UUID"
												},
												{
													"key": "q",
													"value": "string",
													"description": "Search query for title and author name"
												},
												{
													"key": "pageSize",
													"value": "10",
													"description": "Items per page (default: 10, max: 100)"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number (default: 1)"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new book",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"e8fb2633-2ee0-e5bb-1b1a-45be702a4188\"\n  ],\n  \"categoryIds\": [\n    \"6187db84-8275-47d0-1a9c-2890aaa9ff9a\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"http://wUaUfGrgW.umfdqeL2G3zR8v.\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/books",
								"description": "Creates a new book in the catalog. Admin only. Validates ISBN format and uniqueness."
							},
							"response": [
								{
									"name": "Book created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"e8fb2633-2ee0-e5bb-1b1a-45be702a4188\"\n  ],\n  \"categoryIds\": [\n    \"6187db84-8275-47d0-1a9c-2890aaa9ff9a\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"http://wUaUfGrgW.umfdqeL2G3zR8v.\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/books"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input data or ISBN already exists",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"e8fb2633-2ee0-e5bb-1b1a-45be702a4188\"\n  ],\n  \"categoryIds\": [\n    \"6187db84-8275-47d0-1a9c-2890aaa9ff9a\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"http://wUaUfGrgW.umfdqeL2G3zR8v.\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/books"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"e8fb2633-2ee0-e5bb-1b1a-45be702a4188\"\n  ],\n  \"categoryIds\": [\n    \"6187db84-8275-47d0-1a9c-2890aaa9ff9a\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"http://wUaUfGrgW.umfdqeL2G3zR8v.\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/books"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"e8fb2633-2ee0-e5bb-1b1a-45be702a4188\"\n  ],\n  \"categoryIds\": [\n    \"6187db84-8275-47d0-1a9c-2890aaa9ff9a\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"http://wUaUfGrgW.umfdqeL2G3zR8v.\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/books"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "copies",
					"item": [
						{
							"name": "{copyId}",
							"item": [
								{
									"name": "Update a book copy",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/copies/:copyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"copies",
												":copyId"
											],
											"variable": [
												{
													"key": "copyId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Copy UUID"
												}
											]
										},
										"description": "Updates a physical copy. Cannot set status to AVAILABLE if copy has an open loan. Admin only."
									},
									"response": [
										{
											"name": "Copy updated successfully",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid input data or business rule violation",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Copy not found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete a book copy",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/copies/:copyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"copies",
												":copyId"
											],
											"variable": [
												{
													"key": "copyId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Copy UUID"
												}
											]
										},
										"description": "Deletes a physical copy if it has no loan history. Admin only."
									},
									"response": [
										{
											"name": "Copy deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (ADMIN only)",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Copy not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Copy has loan history and cannot be deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/copies/:copyId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"copies",
														":copyId"
													],
													"variable": [
														{
															"key": "copyId"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "settings",
					"item": [
						{
							"name": "Get system settings",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/api/settings",
								"description": "Retrieves current system configuration including borrowing policy, notification settings, and operational parameters. Admin only."
							},
							"response": [
								{
									"name": "Settings retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": "{{baseUrl}}/api/settings"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"b71a4dc5-ff88-a98e-9ddf-ca31bc3cda06\",\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\",\n  \"createdAt\": \"1975-08-13T23:44:47.078Z\",\n  \"updatedAt\": \"1990-02-05T18:26:28.197Z\"\n}"
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": "{{baseUrl}}/api/settings"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": "{{baseUrl}}/api/settings"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Update system settings",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/settings",
								"description": "Updates system configuration. All fields are optional. Changes are logged and take effect based on the setting type. Admin only."
							},
							"response": [
								{
									"name": "Settings updated successfully",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/settings"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"05a8a5f1-9a9a-f328-34a3-2b7d0a98abce\",\n  \"approvalsRequired\": true,\n  \"loanDays\": 2585.664700333059,\n  \"renewalDays\": 7696.162642692101,\n  \"renewalMinDaysBeforeDue\": 5531.433844518449,\n  \"maxRenewals\": 60.11240937485951,\n  \"overdueFeePerDay\": 4704.440779998265,\n  \"overdueFeeCapPerLoan\": 7658.313230212797,\n  \"currency\": \"EUR\",\n  \"maxConcurrentLoans\": 2163.1077844795277,\n  \"notificationsEnabled\": false,\n  \"dueSoonDays\": 1469.0846254334322,\n  \"dueDateNotificationsEnabled\": false,\n  \"fromEmail\": \"Ya-iF6iG@uIJUhgyTrDDxlMSzuOq.qc\",\n  \"smtpProvider\": \"CUSTOM\",\n  \"sendHourUTC\": 8731.004383023786,\n  \"timeZone\": \"string\",\n  \"createdAt\": \"2005-06-02T02:16:50.569Z\",\n  \"updatedAt\": \"1990-07-16T20:13:06.603Z\"\n}"
								},
								{
									"name": "Invalid input data",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/settings"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/settings"
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/settings"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "loans",
					"item": [
						{
							"name": "{loanId}",
							"item": [
								{
									"name": "approve-reject",
									"item": [
										{
											"name": "Approve or reject a loan",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"3ce9bb53-d60a-9c1b-d173-f1fb8b044802\",\n  \"rejectionReason\": \"string\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"loans",
														":loanId",
														"approve-reject"
													],
													"variable": [
														{
															"key": "loanId",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Loan UUID"
														}
													]
												},
												"description": "Admin approves or rejects a pending loan request. Admin only."
											},
											"response": [
												{
													"name": "Loan approved/rejected successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"3ce9bb53-d60a-9c1b-d173-f1fb8b044802\",\n  \"rejectionReason\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"approve-reject"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"3ce9bb53-d60a-9c1b-d173-f1fb8b044802\",\n  \"rejectionReason\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"approve-reject"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan not in REQUESTED status or copy unavailable",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"3ce9bb53-d60a-9c1b-d173-f1fb8b044802\",\n  \"rejectionReason\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"approve-reject"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "renew",
									"item": [
										{
											"name": "Renew a loan",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/loans/:loanId/renew",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"loans",
														":loanId",
														"renew"
													],
													"variable": [
														{
															"key": "loanId",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Loan UUID"
														}
													]
												},
												"description": "Extends the due date of an active loan. Member (loan owner) or Admin."
											},
											"response": [
												{
													"name": "Loan renewed successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/renew",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"renew"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authorized or suspended member",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/renew",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"renew"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/renew",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"renew"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Renewal not allowed (max renewals, overdue, etc.)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/renew",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"renew"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "cancel",
									"item": [
										{
											"name": "Cancel a loan",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/loans/:loanId/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"loans",
														":loanId",
														"cancel"
													],
													"variable": [
														{
															"key": "loanId",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Loan UUID"
														}
													]
												},
												"description": "Cancels a pending or approved loan. Member (loan owner) or Admin."
											},
											"response": [
												{
													"name": "Loan cancelled successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"cancel"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"cancel"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"cancel"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan cannot be cancelled (already active or returned)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"cancel"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "checkout",
									"item": [
										{
											"name": "Checkout a loan",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/loans/:loanId/checkout",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"loans",
														":loanId",
														"checkout"
													],
													"variable": [
														{
															"key": "loanId",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Loan UUID"
														}
													]
												},
												"description": "Marks an approved loan as active when member picks up the book. Admin only."
											},
											"response": [
												{
													"name": "Loan checked out successfully",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/checkout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"checkout"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authorized (ADMIN only)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/checkout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"checkout"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/checkout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"checkout"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan not in APPROVED status or member suspended",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/checkout",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"checkout"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "return",
									"item": [
										{
											"name": "Return a loan",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": {
														"token": "{{bearerToken}}"
													}
												},
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/loans/:loanId/return",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"loans",
														":loanId",
														"return"
													],
													"variable": [
														{
															"key": "loanId",
															"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
															"description": "Loan UUID"
														}
													]
												},
												"description": "Marks a loan as returned and calculates any overdue penalties. Member (loan owner) or Admin."
											},
											"response": [
												{
													"name": "Loan returned successfully (includes penalty if applicable)",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/return",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"return"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not authorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/return",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"return"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan not found",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/return",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"return"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Loan already returned or invalid status",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/api/loans/:loanId/return",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"api",
																"loans",
																":loanId",
																"return"
															],
															"variable": [
																{
																	"key": "loanId"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "List all loans (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/loans?sortOrder=asc&sortBy=borrowedAt&dueAfter=2022-07-08&dueBefore=2022-07-08&bookId=string&memberId=string&status=RETURNED&pageSize=6713.337739687746&page=6713.337739687746",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"loans"
									],
									"query": [
										{
											"key": "sortOrder",
											"value": "asc"
										},
										{
											"key": "sortBy",
											"value": "borrowedAt"
										},
										{
											"key": "dueAfter",
											"value": "2022-07-08"
										},
										{
											"key": "dueBefore",
											"value": "2022-07-08"
										},
										{
											"key": "bookId",
											"value": "string"
										},
										{
											"key": "memberId",
											"value": "string"
										},
										{
											"key": "status",
											"value": "RETURNED"
										},
										{
											"key": "pageSize",
											"value": "6713.337739687746"
										},
										{
											"key": "page",
											"value": "6713.337739687746"
										}
									]
								},
								"description": "Retrieves all loans in the system with filtering and pagination. Admin only."
							},
							"response": [
								{
									"name": "Loans retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/loans?sortOrder=asc&sortBy=borrowedAt&dueAfter=2022-07-08&dueBefore=2022-07-08&bookId=string&memberId=string&status=RETURNED&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"loans"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc"
												},
												{
													"key": "sortBy",
													"value": "borrowedAt"
												},
												{
													"key": "dueAfter",
													"value": "2022-07-08"
												},
												{
													"key": "dueBefore",
													"value": "2022-07-08"
												},
												{
													"key": "bookId",
													"value": "string"
												},
												{
													"key": "memberId",
													"value": "string"
												},
												{
													"key": "status",
													"value": "RETURNED"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746"
												},
												{
													"key": "page",
													"value": "6713.337739687746"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/loans?sortOrder=asc&sortBy=borrowedAt&dueAfter=2022-07-08&dueBefore=2022-07-08&bookId=string&memberId=string&status=RETURNED&pageSize=6713.337739687746&page=6713.337739687746",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"loans"
											],
											"query": [
												{
													"key": "sortOrder",
													"value": "asc"
												},
												{
													"key": "sortBy",
													"value": "borrowedAt"
												},
												{
													"key": "dueAfter",
													"value": "2022-07-08"
												},
												{
													"key": "dueBefore",
													"value": "2022-07-08"
												},
												{
													"key": "bookId",
													"value": "string"
												},
												{
													"key": "memberId",
													"value": "string"
												},
												{
													"key": "status",
													"value": "RETURNED"
												},
												{
													"key": "pageSize",
													"value": "6713.337739687746"
												},
												{
													"key": "page",
													"value": "6713.337739687746"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a loan (borrow a book)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bookId\": \"28eaf1d3-6b5a-326b-04e9-2de217dba593\",\n  \"copyId\": \"bbf990f3-93bf-b14d-dc37-6c23c1eb887d\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/loans",
								"description": "Creates a new loan for the authenticated member. Member only."
							},
							"response": [
								{
									"name": "Loan created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookId\": \"28eaf1d3-6b5a-326b-04e9-2de217dba593\",\n  \"copyId\": \"bbf990f3-93bf-b14d-dc37-6c23c1eb887d\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/loans"
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Invalid input or member ineligible",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookId\": \"28eaf1d3-6b5a-326b-04e9-2de217dba593\",\n  \"copyId\": \"bbf990f3-93bf-b14d-dc37-6c23c1eb887d\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/loans"
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Member suspended or max loans exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookId\": \"28eaf1d3-6b5a-326b-04e9-2de217dba593\",\n  \"copyId\": \"bbf990f3-93bf-b14d-dc37-6c23c1eb887d\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/loans"
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Book not found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookId\": \"28eaf1d3-6b5a-326b-04e9-2de217dba593\",\n  \"copyId\": \"bbf990f3-93bf-b14d-dc37-6c23c1eb887d\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/loans"
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "No available copies",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"bookId\": \"28eaf1d3-6b5a-326b-04e9-2de217dba593\",\n  \"copyId\": \"bbf990f3-93bf-b14d-dc37-6c23c1eb887d\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": "{{baseUrl}}/api/loans"
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "my",
					"item": [
						{
							"name": "loans",
							"item": [
								{
									"name": "Get current member's loans",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": {
												"token": "{{bearerToken}}"
											}
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=dueDate&status=REJECTED",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"my",
												"loans"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "20",
													"description": "Items per page (default: 20, max: 100)"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number (default: 1)"
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort direction (default: asc)"
												},
												{
													"key": "sortBy",
													"value": "dueDate",
													"description": "Field to sort by (default: dueDate)"
												},
												{
													"key": "status",
													"value": "REJECTED",
													"description": "Filter by loan status"
												}
											]
										},
										"description": "Retrieves the authenticated member's loans with computed fields (canRenew, isOverdue, daysUntilDue). Supports filtering by status and sorting. Member only."
									},
									"response": [
										{
											"name": "Member's loans retrieved successfully",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=dueDate&status=REJECTED",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"my",
														"loans"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "20",
															"description": "Items per page (default: 20, max: 100)"
														},
														{
															"key": "page",
															"value": "1",
															"description": "Page number (default: 1)"
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort direction (default: asc)"
														},
														{
															"key": "sortBy",
															"value": "dueDate",
															"description": "Field to sort by (default: dueDate)"
														},
														{
															"key": "status",
															"value": "REJECTED",
															"description": "Filter by loan status"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"loans\": [\n    {\n      \"id\": \"7d39f8b8-cfa7-4c37-c24f-b1622912df8e\",\n      \"memberId\": \"54018545-46f4-3dfc-e6d8-61fd687337be\",\n      \"bookCopyId\": \"4820c003-182a-bbf9-e768-fea64d8ce03f\",\n      \"status\": \"CANCELLED\",\n      \"requestedAt\": \"1947-11-13T17:40:29.813Z\",\n      \"approvedAt\": \"1980-02-03T11:17:46.358Z\",\n      \"borrowedAt\": \"1947-10-10T04:55:13.646Z\",\n      \"dueDate\": \"1948-02-19T07:07:08.573Z\",\n      \"returnedAt\": \"1946-06-12T09:10:41.042Z\",\n      \"renewalCount\": 0,\n      \"overdueFee\": 0,\n      \"rejectionReason\": \"string\",\n      \"bookCopy\": {\n        \"id\": \"8783c042-1391-f17f-304c-58a08203020b\",\n        \"copyNumber\": \"string\",\n        \"book\": {\n          \"id\": \"04a753dd-9198-e758-2573-8c0b0002011c\",\n          \"title\": \"string\",\n          \"subtitle\": \"string\",\n          \"isbn\": \"string\",\n          \"coverImageUrl\": \"string\"\n        }\n      },\n      \"canRenew\": true,\n      \"isOverdue\": true,\n      \"daysUntilDue\": 8372.331421894713\n    },\n    {\n      \"id\": \"bc8ccb9a-ba92-9e22-0a7d-073c7667c4d9\",\n      \"memberId\": \"f1b09f0d-de5b-6d45-e711-48dd120f9ede\",\n      \"bookCopyId\": \"60736206-d3ee-2d13-6741-0c4c36088b64\",\n      \"status\": \"BORROWED\",\n      \"requestedAt\": \"1989-06-28T10:58:43.969Z\",\n      \"approvedAt\": \"1955-09-29T03:25:09.027Z\",\n      \"borrowedAt\": \"1969-08-24T08:43:00.840Z\",\n      \"dueDate\": \"2001-11-07T21:54:24.939Z\",\n      \"returnedAt\": \"1998-01-29T11:11:33.913Z\",\n      \"renewalCount\": 0,\n      \"overdueFee\": 0,\n      \"rejectionReason\": \"string\",\n      \"bookCopy\": {\n        \"id\": \"fd638c26-7f3a-b064-dffa-56ab326638d1\",\n        \"copyNumber\": \"string\",\n        \"book\": {\n          \"id\": \"e50d09ce-41f4-4d6c-9b95-24a82f3df87c\",\n          \"title\": \"string\",\n          \"subtitle\": \"string\",\n          \"isbn\": \"string\",\n          \"coverImageUrl\": \"string\"\n        }\n      },\n      \"canRenew\": false,\n      \"isOverdue\": true,\n      \"daysUntilDue\": 9900.606180408387\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 20,\n    \"totalItems\": 5,\n    \"totalPages\": 1\n  }\n}"
										},
										{
											"name": "Invalid query parameters",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=dueDate&status=REJECTED",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"my",
														"loans"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "20",
															"description": "Items per page (default: 20, max: 100)"
														},
														{
															"key": "page",
															"value": "1",
															"description": "Page number (default: 1)"
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort direction (default: asc)"
														},
														{
															"key": "sortBy",
															"value": "dueDate",
															"description": "Field to sort by (default: dueDate)"
														},
														{
															"key": "status",
															"value": "REJECTED",
															"description": "Filter by loan status"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authenticated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=dueDate&status=REJECTED",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"my",
														"loans"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "20",
															"description": "Items per page (default: 20, max: 100)"
														},
														{
															"key": "page",
															"value": "1",
															"description": "Page number (default: 1)"
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort direction (default: asc)"
														},
														{
															"key": "sortBy",
															"value": "dueDate",
															"description": "Field to sort by (default: dueDate)"
														},
														{
															"key": "status",
															"value": "REJECTED",
															"description": "Filter by loan status"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not authorized (MEMBER only)",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=dueDate&status=REJECTED",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"my",
														"loans"
													],
													"query": [
														{
															"key": "pageSize",
															"value": "20",
															"description": "Items per page (default: 20, max: 100)"
														},
														{
															"key": "page",
															"value": "1",
															"description": "Page number (default: 1)"
														},
														{
															"key": "sortOrder",
															"value": "asc",
															"description": "Sort direction (default: asc)"
														},
														{
															"key": "sortBy",
															"value": "dueDate",
															"description": "Field to sort by (default: dueDate)"
														},
														{
															"key": "status",
															"value": "REJECTED",
															"description": "Filter by loan status"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "audit-logs",
					"item": [
						{
							"name": "List audit logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": {
										"token": "{{bearerToken}}"
									}
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee&entityType=Book&action=book.created&userId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"audit-logs"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "50",
											"description": "Items per page (default: 50, max: 100)"
										},
										{
											"key": "page",
											"value": "1",
											"description": "Page number (default: 1)"
										},
										{
											"key": "sortOrder",
											"value": "asc",
											"description": "Sort direction (default: desc)"
										},
										{
											"key": "sortBy",
											"value": "createdAt",
											"description": "Field to sort by (default: createdAt)"
										},
										{
											"key": "dateTo",
											"value": "2024-12-31T23:59:59Z",
											"description": "Filter logs created before this date (ISO 8601 format)"
										},
										{
											"key": "dateFrom",
											"value": "2024-01-01T00:00:00Z",
											"description": "Filter logs created after this date (ISO 8601 format)"
										},
										{
											"key": "entityId",
											"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
											"description": "Filter by entity ID"
										},
										{
											"key": "entityType",
											"value": "Book",
											"description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
										},
										{
											"key": "action",
											"value": "book.created",
											"description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
										},
										{
											"key": "userId",
											"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
											"description": "Filter by user ID"
										}
									]
								},
								"description": "Retrieves system audit trail with filtering by user, action, entity, and date range. Returns paginated results with audit log details. Admin only."
							},
							"response": [
								{
									"name": "Audit logs retrieved successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee&entityType=Book&action=book.created&userId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"audit-logs"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "50",
													"description": "Items per page (default: 50, max: 100)"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number (default: 1)"
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort direction (default: desc)"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Field to sort by (default: createdAt)"
												},
												{
													"key": "dateTo",
													"value": "2024-12-31T23:59:59Z",
													"description": "Filter logs created before this date (ISO 8601 format)"
												},
												{
													"key": "dateFrom",
													"value": "2024-01-01T00:00:00Z",
													"description": "Filter logs created after this date (ISO 8601 format)"
												},
												{
													"key": "entityId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by entity ID"
												},
												{
													"key": "entityType",
													"value": "Book",
													"description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
												},
												{
													"key": "action",
													"value": "book.created",
													"description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
												},
												{
													"key": "userId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by user ID"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"logs\": [\n    {\n      \"id\": \"699b777e-6423-50f1-7418-95a7c2c4d64f\",\n      \"userId\": \"ec913ee5-9d5e-7f1e-e651-0dc6af128e9a\",\n      \"action\": \"book.created\",\n      \"entityType\": \"Book\",\n      \"entityId\": \"3ed80cc5-ebca-253d-87dd-a3a34885526c\",\n      \"changes\": {},\n      \"ipAddress\": \"192.168.1.1\",\n      \"userAgent\": \"string\",\n      \"createdAt\": \"1968-08-21T08:47:11.769Z\",\n      \"user\": {\n        \"id\": \"44d583c4-0580-6ea5-a696-4b8af981ad9b\",\n        \"email\": \"q4KMmnCTsyq@CdFATZXAlguAttSWQklucZRDEyq.yjja\",\n        \"role\": \"ADMIN\"\n      }\n    },\n    {\n      \"id\": \"16fa137b-c95e-80d5-344e-35472979771a\",\n      \"userId\": \"716aadae-092b-7bc5-15b7-2908f351575e\",\n      \"action\": \"book.created\",\n      \"entityType\": \"Book\",\n      \"entityId\": \"1919a73b-5c52-e0bf-5e5c-9dc0b796392e\",\n      \"changes\": {},\n      \"ipAddress\": \"192.168.1.1\",\n      \"userAgent\": \"string\",\n      \"createdAt\": \"2002-08-30T21:38:35.383Z\",\n      \"user\": {\n        \"id\": \"91f56a58-c9ca-ff0c-3f8b-980ea3aa6118\",\n        \"email\": \"vtiCpW9tL@OmteBAPOYyUWRGipQSc.vd\",\n        \"role\": \"ADMIN\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 50,\n    \"totalItems\": 250,\n    \"totalPages\": 5\n  }\n}"
								},
								{
									"name": "Invalid query parameters",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee&entityType=Book&action=book.created&userId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"audit-logs"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "50",
													"description": "Items per page (default: 50, max: 100)"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number (default: 1)"
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort direction (default: desc)"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Field to sort by (default: createdAt)"
												},
												{
													"key": "dateTo",
													"value": "2024-12-31T23:59:59Z",
													"description": "Filter logs created before this date (ISO 8601 format)"
												},
												{
													"key": "dateFrom",
													"value": "2024-01-01T00:00:00Z",
													"description": "Filter logs created after this date (ISO 8601 format)"
												},
												{
													"key": "entityId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by entity ID"
												},
												{
													"key": "entityType",
													"value": "Book",
													"description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
												},
												{
													"key": "action",
													"value": "book.created",
													"description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
												},
												{
													"key": "userId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by user ID"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authenticated",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee&entityType=Book&action=book.created&userId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"audit-logs"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "50",
													"description": "Items per page (default: 50, max: 100)"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number (default: 1)"
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort direction (default: desc)"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Field to sort by (default: createdAt)"
												},
												{
													"key": "dateTo",
													"value": "2024-12-31T23:59:59Z",
													"description": "Filter logs created before this date (ISO 8601 format)"
												},
												{
													"key": "dateFrom",
													"value": "2024-01-01T00:00:00Z",
													"description": "Filter logs created after this date (ISO 8601 format)"
												},
												{
													"key": "entityId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by entity ID"
												},
												{
													"key": "entityType",
													"value": "Book",
													"description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
												},
												{
													"key": "action",
													"value": "book.created",
													"description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
												},
												{
													"key": "userId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by user ID"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not authorized (ADMIN only)",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee&entityType=Book&action=book.created&userId=5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"audit-logs"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "50",
													"description": "Items per page (default: 50, max: 100)"
												},
												{
													"key": "page",
													"value": "1",
													"description": "Page number (default: 1)"
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"description": "Sort direction (default: desc)"
												},
												{
													"key": "sortBy",
													"value": "createdAt",
													"description": "Field to sort by (default: createdAt)"
												},
												{
													"key": "dateTo",
													"value": "2024-12-31T23:59:59Z",
													"description": "Filter logs created before this date (ISO 8601 format)"
												},
												{
													"key": "dateFrom",
													"value": "2024-01-01T00:00:00Z",
													"description": "Filter logs created after this date (ISO 8601 format)"
												},
												{
													"key": "entityId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by entity ID"
												},
												{
													"key": "entityType",
													"value": "Book",
													"description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
												},
												{
													"key": "action",
													"value": "book.created",
													"description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
												},
												{
													"key": "userId",
													"value": "5e52fd98-cd4a-b8b8-43dd-33edf224a9ee",
													"description": "Filter by user ID"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "health",
					"item": [
						{
							"name": "Health check endpoint",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": "{{baseUrl}}/api/health",
								"description": "Checks the health of system components including database and optional SMTP connectivity. Used for monitoring and deployment orchestration."
							},
							"response": [
								{
									"name": "Health check completed successfully",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": "{{baseUrl}}/api/health"
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n  \"uptime\": 3600,\n  \"checks\": {\n    \"database\": {\n      \"status\": \"ok\",\n      \"latency\": 15,\n      \"error\": \"string\"\n    },\n    \"smtp\": {\n      \"status\": \"ok\",\n      \"latency\": 50,\n      \"error\": \"string\"\n    }\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "App Controller get Hello",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{baseUrl}}/api"
					},
					"response": [
						{
							"name": "Untitled Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{baseUrl}}/api"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000"
		}
	]
}
{
  "info": {
    "_postman_id": "bba0a007-d96b-43e1-974d-25c3cf8a0237",
    "name": "Library Management System API",
    "description": "RESTful API for a comprehensive Library Management System. This API provides endpoints for managing books, authors, categories, book copies, members, loans, and system settings.\n\nContact Support:\n Name: Library Management Team\n Email: support@library-management.com",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
    "_exporter_id": "3712556"
  },
  "item": [
    {
      "name": "api",
      "item": [
        {
          "name": "members",
          "item": [
            {
              "name": "register",
              "item": [
                {
                  "name": "Register a new member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "if (pm.response.code === 200) {",
                          "    var jsonData = pm.response.json();",
                          "    pm.environment.set('bearerToken', jsonData.tokens.accessToken);",
                          "    pm.environment.set('refreshToken', jsonData.tokens.refreshToken);",
                          "}"
                        ],
                        "type": "text/javascript",
                        "packages": {},
                        "requests": {}
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/register",
                    "description": "Creates a new user account and member profile. Returns the created user, member profile, and JWT access/refresh tokens for immediate authentication."
                  },
                  "response": [
                    {
                      "name": "Member successfully registered",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/register"
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"user\": {\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"email\": \"john.doe@example.com\",\n    \"role\": \"MEMBER\",\n    \"isActive\": true,\n    \"createdAt\": \"1999-10-03T17:09:54.102Z\",\n    \"updatedAt\": \"1977-01-18T00:52:57.229Z\"\n  },\n  \"memberProfile\": {\n    \"id\": \"b21d6999-e136-f740-507e-56f4f1382190\",\n    \"userId\": \"9349a476-06c9-1121-e266-f2a71e4f799f\",\n    \"membershipNumber\": \"LIB-2024-0001\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"string\",\n    \"membershipStatus\": \"ACTIVE\",\n    \"membershipStartDate\": \"1964-02-05T16:46:38.372Z\",\n    \"membershipEndDate\": \"1969-09-20T09:29:13.120Z\",\n    \"createdAt\": \"1965-04-09T18:26:52.113Z\",\n    \"updatedAt\": \"2001-07-25T01:39:06.424Z\"\n  },\n  \"tokens\": {\n    \"accessToken\": \"string\",\n    \"refreshToken\": \"string\"\n  }\n}"
                    },
                    {
                      "name": "Invalid input data or email already exists",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/register"
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 400,\n  \"message\": \"Email already exists\",\n  \"errors\": [\n    {\n      \"field\": \"email\",\n      \"message\": \"Email already exists\"\n    },\n    {\n      \"field\": \"email\",\n      \"message\": \"Email already exists\"\n    }\n  ]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "login",
              "item": [
                {
                  "name": "Login with email and password",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "if (pm.response.code === 200) {",
                          "    var jsonData = pm.response.json();",
                          "    pm.environment.set('bearerToken', jsonData.tokens.accessToken);",
                          "    pm.environment.set('refreshToken', jsonData.tokens.refreshToken);",
                          "}"
                        ],
                        "type": "text/javascript",
                        "packages": {},
                        "requests": {}
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/login",
                    "description": "Authenticates a user with email and password. Returns JWT access and refresh tokens. Rate limited to 10 requests per minute to prevent brute force attacks."
                  },
                  "response": [
                    {
                      "name": "Login successful",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/login"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"user\": {\n    \"id\": \"6d258391-9934-ac71-ffab-481d78a2827b\",\n    \"email\": \"qZ79HpvIucwjIhK@IzUQwOnmYzvjlq.suer\",\n    \"role\": \"MEMBER\",\n    \"isActive\": true\n  },\n  \"memberProfile\": {},\n  \"tokens\": {\n    \"accessToken\": \"string\",\n    \"refreshToken\": \"string\"\n  }\n}"
                    },
                    {
                      "name": "Invalid credentials or account suspended",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/login"
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid email or password\"\n}"
                    },
                    {
                      "name": "Too many login attempts",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/login"
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 429,\n  \"message\": \"Too Many Requests\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "refresh",
              "item": [
                {
                  "name": "Refresh access and refresh tokens",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "if (pm.response.code === 200) {",
                          "    var jsonData = pm.response.json();",
                          "    pm.environment.set('bearerToken', jsonData.accessToken);",
                          "    pm.environment.set('refreshToken', jsonData.refreshToken);",
                          "}"
                        ],
                        "type": "text/javascript",
                        "packages": {},
                        "requests": {}
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/refresh",
                    "description": "Uses a valid refresh token to generate new access and refresh tokens. The old refresh token is revoked after successful refresh."
                  },
                  "response": [
                    {
                      "name": "Tokens refreshed successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/refresh"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"accessToken\": \"string\",\n  \"refreshToken\": \"string\"\n}"
                    },
                    {
                      "name": "Invalid or expired refresh token",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/refresh"
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid refresh token\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "logout",
              "item": [
                {
                  "name": "Logout user",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/logout",
                    "description": "Logs out the user by revoking their refresh token. The access token will remain valid until it expires (1 hour)."
                  },
                  "response": [
                    {
                      "name": "Logout successful",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/logout"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"message\": \"Logout successful\"\n}"
                    },
                    {
                      "name": "Invalid or expired refresh token",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/logout"
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 401,\n  \"message\": \"Unauthorized\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "{id}",
              "item": [
                {
                  "name": "activate",
                  "item": [
                    {
                      "name": "Activate a member",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id/activate",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id", "activate"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Member profile UUID"
                            }
                          ]
                        },
                        "description": "Changes member status from PENDING to ACTIVE. Admin only."
                      },
                      "response": [
                        {
                          "name": "Member activated successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/activate",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "activate"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/activate",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "activate"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member already active",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/activate",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "activate"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "suspend",
                  "item": [
                    {
                      "name": "Suspend a member",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"reason\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id", "suspend"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Member profile UUID"
                            }
                          ]
                        },
                        "description": "Changes member status from ACTIVE to SUSPENDED. Admin only."
                      },
                      "response": [
                        {
                          "name": "Member suspended successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"reason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/suspend",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "suspend"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"reason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/suspend",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "suspend"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member already suspended",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"reason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/suspend",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "suspend"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get member details",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/members/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Member profile UUID"
                        }
                      ]
                    },
                    "description": "Retrieves detailed information about a specific member. Admin only."
                  },
                  "response": [
                    {
                      "name": "Member retrieved successfully",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Member not found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Update member profile",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/members/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Member profile UUID"
                        }
                      ]
                    },
                    "description": "Updates member profile information. Admin only."
                  },
                  "response": [
                    {
                      "name": "Member updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Member not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all members",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/members?sortOrder=desc&sortBy=lastName&status=ACTIVE&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "members"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "desc"
                    },
                    {
                      "key": "sortBy",
                      "value": "lastName"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search by name or email"
                    },
                    {
                      "key": "pageSize",
                      "value": "531.2921284430216"
                    },
                    {
                      "key": "page",
                      "value": "531.2921284430216"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of members with loan statistics. Admin only."
              },
              "response": [
                {
                  "name": "Members retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/members?sortOrder=desc&sortBy=lastName&status=ACTIVE&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc"
                        },
                        {
                          "key": "sortBy",
                          "value": "lastName"
                        },
                        {
                          "key": "status",
                          "value": "ACTIVE"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search by name or email"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/members?sortOrder=desc&sortBy=lastName&status=ACTIVE&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc"
                        },
                        {
                          "key": "sortBy",
                          "value": "lastName"
                        },
                        {
                          "key": "status",
                          "value": "ACTIVE"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search by name or email"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/members?sortOrder=desc&sortBy=lastName&status=ACTIVE&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc"
                        },
                        {
                          "key": "sortBy",
                          "value": "lastName"
                        },
                        {
                          "key": "status",
                          "value": "ACTIVE"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search by name or email"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "authors",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Update an author",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/authors/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Author UUID"
                        }
                      ]
                    },
                    "description": "Updates an existing author. Admin only."
                  },
                  "response": [
                    {
                      "name": "Author updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Author not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete an author",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/authors/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Author UUID"
                        }
                      ]
                    },
                    "description": "Deletes an author if not referenced by any books. Admin only."
                  },
                  "response": [
                    {
                      "name": "Author deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Author not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Author is referenced by books and cannot be deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all authors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/authors?sortOrder=desc&sortBy=name&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "authors"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    },
                    {
                      "key": "sortBy",
                      "value": "name",
                      "description": "Sort field"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search query for author name"
                    },
                    {
                      "key": "pageSize",
                      "value": "531.2921284430216",
                      "description": "Items per page (default: 10, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "531.2921284430216",
                      "description": "Page number (default: 1)"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of authors with search and sorting."
              },
              "response": [
                {
                  "name": "Authors retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/authors?sortOrder=desc&sortBy=name&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/authors?sortOrder=desc&sortBy=name&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a new author",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/authors",
                "description": "Creates a new author. Admin only."
              },
              "response": [
                {
                  "name": "Author created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input data or author already exists",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "categories",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Update a category",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/categories/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Category UUID"
                        }
                      ]
                    },
                    "description": "Updates an existing category. Admin only."
                  },
                  "response": [
                    {
                      "name": "Category updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Category not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a category",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/categories/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Category UUID"
                        }
                      ]
                    },
                    "description": "Deletes a category if not referenced by any books. Admin only."
                  },
                  "response": [
                    {
                      "name": "Category deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Category not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Category is referenced by books and cannot be deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/categories?sortOrder=desc&sortBy=name&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "categories"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order"
                    },
                    {
                      "key": "sortBy",
                      "value": "name",
                      "description": "Sort field"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search query for category name"
                    },
                    {
                      "key": "pageSize",
                      "value": "531.2921284430216",
                      "description": "Items per page (default: 10, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "531.2921284430216",
                      "description": "Page number (default: 1)"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of categories with search and sorting."
              },
              "response": [
                {
                  "name": "Categories retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/categories?sortOrder=desc&sortBy=name&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for category name"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/categories?sortOrder=desc&sortBy=name&q=string&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for category name"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a new category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/categories",
                "description": "Creates a new category. Admin only."
              },
              "response": [
                {
                  "name": "Category created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input data or category already exists",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "books",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "copies",
                  "item": [
                    {
                      "name": "List copies for a book",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=531.2921284430216&page=531.2921284430216",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id", "copies"],
                          "query": [
                            {
                              "key": "status",
                              "value": "ON_LOAN",
                              "description": "Filter by copy status"
                            },
                            {
                              "key": "pageSize",
                              "value": "531.2921284430216",
                              "description": "Items per page (default: 10, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "531.2921284430216",
                              "description": "Page number (default: 1)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Book UUID"
                            }
                          ]
                        },
                        "description": "Retrieves all physical copies for a specific book. Admin only."
                      },
                      "response": [
                        {
                          "name": "Copies retrieved successfully",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=531.2921284430216&page=531.2921284430216",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "531.2921284430216",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "531.2921284430216",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authenticated",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=531.2921284430216&page=531.2921284430216",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "531.2921284430216",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "531.2921284430216",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized (ADMIN only)",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=531.2921284430216&page=531.2921284430216",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "531.2921284430216",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "531.2921284430216",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Book not found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=531.2921284430216&page=531.2921284430216",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "531.2921284430216",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "531.2921284430216",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Add copies to a book",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id/copies",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id", "copies"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Book UUID"
                            }
                          ]
                        },
                        "description": "Adds multiple physical copies to a book. Admin only."
                      },
                      "response": [
                        {
                          "name": "Copies added successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Invalid input data",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authenticated",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized (ADMIN only)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Book not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get a book by ID",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/books/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Book UUID"
                        }
                      ]
                    },
                    "description": "Retrieves detailed information about a specific book including authors, categories, and copy availability."
                  },
                  "response": [
                    {
                      "name": "Book retrieved successfully",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"id\": \"4828c7e1-c09c-00f0-dfd0-bb5c7456a556\",\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 82.77283695636851,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://GCcDq.yrmvGVH2Z9o,GiR0sNIByQvmeh,om8bj-QIKsRzNDB0E9+RMSx+e8tzlIbE\",\n  \"status\": \"ARCHIVED\",\n  \"availableCopies\": 6994.749511855882,\n  \"totalCopies\": 4720.0684759704245\n}"
                    },
                    {
                      "name": "Book not found or archived",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Update a book",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 8345.975221589488,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"http://CztmDhxClYyeIwrR.mcbUuR93WqRtq-HpA\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"91c90b22-4a10-ea36-c48f-5473e6f3844f\",\n    \"a4e65a2a-f6a7-cee9-7813-17629a07acab\"\n  ],\n  \"categoryIds\": [\n    \"e48de32d-4533-4c8b-ec3e-e2501aef30e3\",\n    \"a70244aa-d380-83f3-60ce-923365085f03\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/books/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Book UUID"
                        }
                      ]
                    },
                    "description": "Updates an existing book. Admin only. All fields are optional."
                  },
                  "response": [
                    {
                      "name": "Book updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 8345.975221589488,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"http://CztmDhxClYyeIwrR.mcbUuR93WqRtq-HpA\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"91c90b22-4a10-ea36-c48f-5473e6f3844f\",\n    \"a4e65a2a-f6a7-cee9-7813-17629a07acab\"\n  ],\n  \"categoryIds\": [\n    \"e48de32d-4533-4c8b-ec3e-e2501aef30e3\",\n    \"a70244aa-d380-83f3-60ce-923365085f03\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 8345.975221589488,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"http://CztmDhxClYyeIwrR.mcbUuR93WqRtq-HpA\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"91c90b22-4a10-ea36-c48f-5473e6f3844f\",\n    \"a4e65a2a-f6a7-cee9-7813-17629a07acab\"\n  ],\n  \"categoryIds\": [\n    \"e48de32d-4533-4c8b-ec3e-e2501aef30e3\",\n    \"a70244aa-d380-83f3-60ce-923365085f03\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 8345.975221589488,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"http://CztmDhxClYyeIwrR.mcbUuR93WqRtq-HpA\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"91c90b22-4a10-ea36-c48f-5473e6f3844f\",\n    \"a4e65a2a-f6a7-cee9-7813-17629a07acab\"\n  ],\n  \"categoryIds\": [\n    \"e48de32d-4533-4c8b-ec3e-e2501aef30e3\",\n    \"a70244aa-d380-83f3-60ce-923365085f03\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 8345.975221589488,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"http://CztmDhxClYyeIwrR.mcbUuR93WqRtq-HpA\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"91c90b22-4a10-ea36-c48f-5473e6f3844f\",\n    \"a4e65a2a-f6a7-cee9-7813-17629a07acab\"\n  ],\n  \"categoryIds\": [\n    \"e48de32d-4533-4c8b-ec3e-e2501aef30e3\",\n    \"a70244aa-d380-83f3-60ce-923365085f03\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Book not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 8345.975221589488,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"http://CztmDhxClYyeIwrR.mcbUuR93WqRtq-HpA\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"91c90b22-4a10-ea36-c48f-5473e6f3844f\",\n    \"a4e65a2a-f6a7-cee9-7813-17629a07acab\"\n  ],\n  \"categoryIds\": [\n    \"e48de32d-4533-4c8b-ec3e-e2501aef30e3\",\n    \"a70244aa-d380-83f3-60ce-923365085f03\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a book",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/books/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Book UUID"
                        }
                      ]
                    },
                    "description": "Permanently deletes a book if it has no loan history. If loans exist, the book should be archived instead. Admin only."
                  },
                  "response": [
                    {
                      "name": "Book deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Book not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Book has loan history and cannot be deleted. Archive it instead.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all books",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/books?sortOrder=desc&sortBy=createdAt&availability=ALL&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "books"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort order (default: asc)"
                    },
                    {
                      "key": "sortBy",
                      "value": "createdAt",
                      "description": "Sort field (default: relevance if searching, createdAt otherwise)"
                    },
                    {
                      "key": "availability",
                      "value": "ALL",
                      "description": "Filter by availability status"
                    },
                    {
                      "key": "categoryId",
                      "value": "string",
                      "description": "Filter by category UUID"
                    },
                    {
                      "key": "authorId",
                      "value": "string",
                      "description": "Filter by author UUID"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search query for title and author name"
                    },
                    {
                      "key": "pageSize",
                      "value": "10",
                      "description": "Items per page (default: 10, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (default: 1)"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of books with support for search, filtering, and sorting. Public endpoint accessible without authentication."
              },
              "response": [
                {
                  "name": "Books retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/books?sortOrder=desc&sortBy=createdAt&availability=ALL&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort order (default: asc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Sort field (default: relevance if searching, createdAt otherwise)"
                        },
                        {
                          "key": "availability",
                          "value": "ALL",
                          "description": "Filter by availability status"
                        },
                        {
                          "key": "categoryId",
                          "value": "string",
                          "description": "Filter by category UUID"
                        },
                        {
                          "key": "authorId",
                          "value": "string",
                          "description": "Filter by author UUID"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for title and author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "10",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"books\": [\n    {\n      \"id\": \"bfc5507c-8d1c-3de5-fd57-ba07e717f0ab\",\n      \"title\": \"The Great Gatsby\",\n      \"subtitle\": \"string\",\n      \"description\": \"string\",\n      \"isbn\": \"978-0743273565\",\n      \"publicationYear\": 1925,\n      \"language\": \"English\",\n      \"coverImageUrl\": \"https://kTsbeSYQIDe.ubjPfAZpLECFiqkc390xewZLYahJt8C\",\n      \"status\": \"ACTIVE\",\n      \"availableCopies\": 3,\n      \"totalCopies\": 5\n    },\n    {\n      \"id\": \"30cc47d1-b4ee-173f-98a1-da65823b42c7\",\n      \"title\": \"The Great Gatsby\",\n      \"subtitle\": \"string\",\n      \"description\": \"string\",\n      \"isbn\": \"978-0743273565\",\n      \"publicationYear\": 1925,\n      \"language\": \"English\",\n      \"coverImageUrl\": \"https://LajxmXQkIIw.ocMaLeJXMv2HpeUx2,IxlwBFOsdz7y-wsc.nibWhdqs1asLHTtzh2PSVz\",\n      \"status\": \"ACTIVE\",\n      \"availableCopies\": 3,\n      \"totalCopies\": 5\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 10,\n    \"totalItems\": 100,\n    \"totalPages\": 10\n  }\n}"
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/books?sortOrder=desc&sortBy=createdAt&availability=ALL&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort order (default: asc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Sort field (default: relevance if searching, createdAt otherwise)"
                        },
                        {
                          "key": "availability",
                          "value": "ALL",
                          "description": "Filter by availability status"
                        },
                        {
                          "key": "categoryId",
                          "value": "string",
                          "description": "Filter by category UUID"
                        },
                        {
                          "key": "authorId",
                          "value": "string",
                          "description": "Filter by author UUID"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for title and author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "10",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a new book",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"acdadf40-94a1-98a3-c388-5deda465af7a\"\n  ],\n  \"categoryIds\": [\n    \"96c24b99-6349-5229-a1ab-848e654db260\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://KAZSSmLNZBHNDfnDf.ygkivfDCE,Q2\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/books",
                "description": "Creates a new book in the catalog. Admin only. Validates ISBN format and uniqueness."
              },
              "response": [
                {
                  "name": "Book created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"acdadf40-94a1-98a3-c388-5deda465af7a\"\n  ],\n  \"categoryIds\": [\n    \"96c24b99-6349-5229-a1ab-848e654db260\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://KAZSSmLNZBHNDfnDf.ygkivfDCE,Q2\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input data or ISBN already exists",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"acdadf40-94a1-98a3-c388-5deda465af7a\"\n  ],\n  \"categoryIds\": [\n    \"96c24b99-6349-5229-a1ab-848e654db260\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://KAZSSmLNZBHNDfnDf.ygkivfDCE,Q2\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"acdadf40-94a1-98a3-c388-5deda465af7a\"\n  ],\n  \"categoryIds\": [\n    \"96c24b99-6349-5229-a1ab-848e654db260\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://KAZSSmLNZBHNDfnDf.ygkivfDCE,Q2\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"acdadf40-94a1-98a3-c388-5deda465af7a\"\n  ],\n  \"categoryIds\": [\n    \"96c24b99-6349-5229-a1ab-848e654db260\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://KAZSSmLNZBHNDfnDf.ygkivfDCE,Q2\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "copies",
          "item": [
            {
              "name": "{copyId}",
              "item": [
                {
                  "name": "Update a book copy",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/copies/:copyId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "copies", ":copyId"],
                      "variable": [
                        {
                          "key": "copyId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Copy UUID"
                        }
                      ]
                    },
                    "description": "Updates a physical copy. Cannot set status to AVAILABLE if copy has an open loan. Admin only."
                  },
                  "response": [
                    {
                      "name": "Copy updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data or business rule violation",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Copy not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a book copy",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/copies/:copyId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "copies", ":copyId"],
                      "variable": [
                        {
                          "key": "copyId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Copy UUID"
                        }
                      ]
                    },
                    "description": "Deletes a physical copy if it has no loan history. Admin only."
                  },
                  "response": [
                    {
                      "name": "Copy deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Copy not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Copy has loan history and cannot be deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "settings",
          "item": [
            {
              "name": "Get system settings",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": "{{baseUrl}}/api/settings",
                "description": "Retrieves current system configuration including borrowing policy, notification settings, and operational parameters. Admin only."
              },
              "response": [
                {
                  "name": "Settings retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"76cfd216-020d-4cef-e73e-664aa35090d8\",\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\",\n  \"createdAt\": \"2019-05-31T19:15:12.398Z\",\n  \"updatedAt\": \"2009-12-01T17:02:27.739Z\"\n}"
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Update system settings",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/settings",
                "description": "Updates system configuration. All fields are optional. Changes are logged and take effect based on the setting type. Admin only."
              },
              "response": [
                {
                  "name": "Settings updated successfully",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"414a1a41-a533-18e7-c475-6ad95bf02179\",\n  \"approvalsRequired\": false,\n  \"loanDays\": 9888.416545272708,\n  \"renewalDays\": 4866.897483527735,\n  \"renewalMinDaysBeforeDue\": 6505.624346911989,\n  \"maxRenewals\": 2261.847783896764,\n  \"overdueFeePerDay\": 2743.0883669602226,\n  \"overdueFeeCapPerLoan\": 6737.804197400641,\n  \"currency\": \"EUR\",\n  \"maxConcurrentLoans\": 3274.8335583181156,\n  \"notificationsEnabled\": false,\n  \"dueSoonDays\": 6891.034871821149,\n  \"dueDateNotificationsEnabled\": false,\n  \"fromEmail\": \"1NzO@siIJpvjhttrXJvUTFWKPO.yrah\",\n  \"smtpProvider\": \"MAILGUN\",\n  \"sendHourUTC\": 2682.7515617491395,\n  \"timeZone\": \"string\",\n  \"createdAt\": \"1980-02-09T04:01:52.929Z\",\n  \"updatedAt\": \"1961-03-21T01:31:32.035Z\"\n}"
                },
                {
                  "name": "Invalid input data",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "loans",
          "item": [
            {
              "name": "{loanId}",
              "item": [
                {
                  "name": "approve-reject",
                  "item": [
                    {
                      "name": "Approve or reject a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"c0e2d2b7-76f4-d0a2-e9fa-e60331746b72\",\n  \"rejectionReason\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "approve-reject"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Admin approves or rejects a pending loan request. Admin only."
                      },
                      "response": [
                        {
                          "name": "Loan approved/rejected successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"c0e2d2b7-76f4-d0a2-e9fa-e60331746b72\",\n  \"rejectionReason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "loans",
                                ":loanId",
                                "approve-reject"
                              ],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"c0e2d2b7-76f4-d0a2-e9fa-e60331746b72\",\n  \"rejectionReason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "loans",
                                ":loanId",
                                "approve-reject"
                              ],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not in REQUESTED status or copy unavailable",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"c0e2d2b7-76f4-d0a2-e9fa-e60331746b72\",\n  \"rejectionReason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "loans",
                                ":loanId",
                                "approve-reject"
                              ],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "renew",
                  "item": [
                    {
                      "name": "Renew a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "renew"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Extends the due date of an active loan. Member (loan owner) or Admin."
                      },
                      "response": [
                        {
                          "name": "Loan renewed successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized or suspended member",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Renewal not allowed (max renewals, overdue, etc.)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "cancel",
                  "item": [
                    {
                      "name": "Cancel a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "cancel"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Cancels a pending or approved loan. Member (loan owner) or Admin."
                      },
                      "response": [
                        {
                          "name": "Loan cancelled successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan cannot be cancelled (already active or returned)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "checkout",
                  "item": [
                    {
                      "name": "Checkout a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "checkout"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Marks an approved loan as active when member picks up the book. Admin only."
                      },
                      "response": [
                        {
                          "name": "Loan checked out successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized (ADMIN only)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not in APPROVED status or member suspended",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "return",
                  "item": [
                    {
                      "name": "Return a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/return",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "return"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Marks a loan as returned and calculates any overdue penalties. Member (loan owner) or Admin."
                      },
                      "response": [
                        {
                          "name": "Loan returned successfully (includes penalty if applicable)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan already returned or invalid status",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all loans (Admin)",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/loans?sortOrder=desc&sortBy=status&dueAfter=1974-10-05&dueBefore=1974-10-05&bookId=string&memberId=string&status=ACTIVE&pageSize=531.2921284430216&page=531.2921284430216",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "loans"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "desc"
                    },
                    {
                      "key": "sortBy",
                      "value": "status"
                    },
                    {
                      "key": "dueAfter",
                      "value": "1974-10-05"
                    },
                    {
                      "key": "dueBefore",
                      "value": "1974-10-05"
                    },
                    {
                      "key": "bookId",
                      "value": "string"
                    },
                    {
                      "key": "memberId",
                      "value": "string"
                    },
                    {
                      "key": "status",
                      "value": "ACTIVE"
                    },
                    {
                      "key": "pageSize",
                      "value": "531.2921284430216"
                    },
                    {
                      "key": "page",
                      "value": "531.2921284430216"
                    }
                  ]
                },
                "description": "Retrieves all loans in the system with filtering and pagination. Admin only."
              },
              "response": [
                {
                  "name": "Loans retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/loans?sortOrder=desc&sortBy=status&dueAfter=1974-10-05&dueBefore=1974-10-05&bookId=string&memberId=string&status=ACTIVE&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "loans"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc"
                        },
                        {
                          "key": "sortBy",
                          "value": "status"
                        },
                        {
                          "key": "dueAfter",
                          "value": "1974-10-05"
                        },
                        {
                          "key": "dueBefore",
                          "value": "1974-10-05"
                        },
                        {
                          "key": "bookId",
                          "value": "string"
                        },
                        {
                          "key": "memberId",
                          "value": "string"
                        },
                        {
                          "key": "status",
                          "value": "ACTIVE"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/loans?sortOrder=desc&sortBy=status&dueAfter=1974-10-05&dueBefore=1974-10-05&bookId=string&memberId=string&status=ACTIVE&pageSize=531.2921284430216&page=531.2921284430216",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "loans"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "desc"
                        },
                        {
                          "key": "sortBy",
                          "value": "status"
                        },
                        {
                          "key": "dueAfter",
                          "value": "1974-10-05"
                        },
                        {
                          "key": "dueBefore",
                          "value": "1974-10-05"
                        },
                        {
                          "key": "bookId",
                          "value": "string"
                        },
                        {
                          "key": "memberId",
                          "value": "string"
                        },
                        {
                          "key": "status",
                          "value": "ACTIVE"
                        },
                        {
                          "key": "pageSize",
                          "value": "531.2921284430216"
                        },
                        {
                          "key": "page",
                          "value": "531.2921284430216"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a loan (borrow a book)",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"bookId\": \"199b915a-d18c-0b8e-55d0-a546b9c05f8c\",\n  \"copyId\": \"d41a4ffa-8dc2-dabe-25c0-9df0df02d59d\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/loans",
                "description": "Creates a new loan for the authenticated member. Member only."
              },
              "response": [
                {
                  "name": "Loan created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"199b915a-d18c-0b8e-55d0-a546b9c05f8c\",\n  \"copyId\": \"d41a4ffa-8dc2-dabe-25c0-9df0df02d59d\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input or member ineligible",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"199b915a-d18c-0b8e-55d0-a546b9c05f8c\",\n  \"copyId\": \"d41a4ffa-8dc2-dabe-25c0-9df0df02d59d\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Member suspended or max loans exceeded",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"199b915a-d18c-0b8e-55d0-a546b9c05f8c\",\n  \"copyId\": \"d41a4ffa-8dc2-dabe-25c0-9df0df02d59d\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Book not found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"199b915a-d18c-0b8e-55d0-a546b9c05f8c\",\n  \"copyId\": \"d41a4ffa-8dc2-dabe-25c0-9df0df02d59d\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "No available copies",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"199b915a-d18c-0b8e-55d0-a546b9c05f8c\",\n  \"copyId\": \"d41a4ffa-8dc2-dabe-25c0-9df0df02d59d\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "my",
          "item": [
            {
              "name": "loans",
              "item": [
                {
                  "name": "Get current member's loans",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=desc&sortBy=dueDate&status=CANCELLED",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "my", "loans"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "20",
                          "description": "Items per page (default: 20, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort direction (default: asc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "dueDate",
                          "description": "Field to sort by (default: dueDate)"
                        },
                        {
                          "key": "status",
                          "value": "CANCELLED",
                          "description": "Filter by loan status"
                        }
                      ]
                    },
                    "description": "Retrieves the authenticated member's loans with computed fields (canRenew, isOverdue, daysUntilDue). Supports filtering by status and sorting. Member only."
                  },
                  "response": [
                    {
                      "name": "Member's loans retrieved successfully",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=desc&sortBy=dueDate&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "desc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "dueDate",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"loans\": [\n    {\n      \"id\": \"f71d6d97-edd5-5c79-609a-736df22ce2f5\",\n      \"memberId\": \"d55b0a82-dbbb-5a35-af10-fa1e10c2c415\",\n      \"bookCopyId\": \"818011de-852e-6ec1-73f4-a11894c5201f\",\n      \"status\": \"OVERDUE\",\n      \"requestedAt\": \"1996-11-29T19:25:26.194Z\",\n      \"approvedAt\": \"2012-07-09T22:42:42.382Z\",\n      \"borrowedAt\": \"2005-09-16T18:13:36.842Z\",\n      \"dueDate\": \"2009-12-20T20:19:07.514Z\",\n      \"returnedAt\": \"2011-03-07T04:15:06.908Z\",\n      \"renewalCount\": 0,\n      \"overdueFee\": 0,\n      \"rejectionReason\": \"string\",\n      \"bookCopy\": {\n        \"id\": \"74fce57c-ef86-8044-03b5-674b49a92810\",\n        \"copyNumber\": \"string\",\n        \"book\": {\n          \"id\": \"9e0b5a71-527d-ec21-5e6a-f2125375ac7c\",\n          \"title\": \"string\",\n          \"subtitle\": \"string\",\n          \"isbn\": \"string\",\n          \"coverImageUrl\": \"string\"\n        }\n      },\n      \"canRenew\": true,\n      \"isOverdue\": true,\n      \"daysUntilDue\": 8236.067746581444\n    },\n    {\n      \"id\": \"5de895f8-8370-e5ab-f031-70359b45d713\",\n      \"memberId\": \"f8b9e36e-d699-f765-14eb-083f02c25fb9\",\n      \"bookCopyId\": \"d5f5f72f-084a-71d2-8c8a-f7c7c8072a39\",\n      \"status\": \"PENDING\",\n      \"requestedAt\": \"2006-08-19T21:39:03.841Z\",\n      \"approvedAt\": \"2020-03-22T23:45:45.414Z\",\n      \"borrowedAt\": \"1950-06-25T09:28:02.114Z\",\n      \"dueDate\": \"1946-06-05T08:48:33.383Z\",\n      \"returnedAt\": \"1954-08-16T00:29:09.104Z\",\n      \"renewalCount\": 0,\n      \"overdueFee\": 0,\n      \"rejectionReason\": \"string\",\n      \"bookCopy\": {\n        \"id\": \"4de1a295-6c5c-dec5-fa53-fcb68bac2783\",\n        \"copyNumber\": \"string\",\n        \"book\": {\n          \"id\": \"fa184880-befc-854d-4906-2e2bcb35fa43\",\n          \"title\": \"string\",\n          \"subtitle\": \"string\",\n          \"isbn\": \"string\",\n          \"coverImageUrl\": \"string\"\n        }\n      },\n      \"canRenew\": false,\n      \"isOverdue\": true,\n      \"daysUntilDue\": 9288.350597929382\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 20,\n    \"totalItems\": 5,\n    \"totalPages\": 1\n  }\n}"
                    },
                    {
                      "name": "Invalid query parameters",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=desc&sortBy=dueDate&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "desc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "dueDate",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=desc&sortBy=dueDate&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "desc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "dueDate",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (MEMBER only)",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=desc&sortBy=dueDate&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "desc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "dueDate",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "audit-logs",
          "item": [
            {
              "name": "List audit logs",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=desc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad&entityType=Book&action=book.created&userId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "audit-logs"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "50",
                      "description": "Items per page (default: 50, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (default: 1)"
                    },
                    {
                      "key": "sortOrder",
                      "value": "desc",
                      "description": "Sort direction (default: desc)"
                    },
                    {
                      "key": "sortBy",
                      "value": "createdAt",
                      "description": "Field to sort by (default: createdAt)"
                    },
                    {
                      "key": "dateTo",
                      "value": "2024-12-31T23:59:59Z",
                      "description": "Filter logs created before this date (ISO 8601 format)"
                    },
                    {
                      "key": "dateFrom",
                      "value": "2024-01-01T00:00:00Z",
                      "description": "Filter logs created after this date (ISO 8601 format)"
                    },
                    {
                      "key": "entityId",
                      "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                      "description": "Filter by entity ID"
                    },
                    {
                      "key": "entityType",
                      "value": "Book",
                      "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                    },
                    {
                      "key": "action",
                      "value": "book.created",
                      "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                    },
                    {
                      "key": "userId",
                      "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                      "description": "Filter by user ID"
                    }
                  ]
                },
                "description": "Retrieves system audit trail with filtering by user, action, entity, and date range. Returns paginated results with audit log details. Admin only."
              },
              "response": [
                {
                  "name": "Audit logs retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=desc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad&entityType=Book&action=book.created&userId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"logs\": [\n    {\n      \"id\": \"02f9e234-d486-5399-4307-835e0be6b5f0\",\n      \"userId\": \"ad142e01-e5bd-9295-009c-544a16ca4407\",\n      \"action\": \"book.created\",\n      \"entityType\": \"Book\",\n      \"entityId\": \"1b2eaaff-f372-9ef1-a3e7-4bdf2fdb0050\",\n      \"changes\": {},\n      \"ipAddress\": \"192.168.1.1\",\n      \"userAgent\": \"string\",\n      \"createdAt\": \"2001-11-09T06:02:43.062Z\",\n      \"user\": {\n        \"id\": \"55785537-4dba-fe26-9fe9-45b1efa20ee9\",\n        \"email\": \"QiuWBZZeOn5k@UyvwHQvnm.lf\",\n        \"role\": \"MEMBER\"\n      }\n    },\n    {\n      \"id\": \"2fafc574-b561-c6f3-89a1-9cceb561281f\",\n      \"userId\": \"0613ce10-c7ce-4952-1e08-c4f10c95acac\",\n      \"action\": \"book.created\",\n      \"entityType\": \"Book\",\n      \"entityId\": \"5d4f7616-8282-d2f0-be92-f10529b2260d\",\n      \"changes\": {},\n      \"ipAddress\": \"192.168.1.1\",\n      \"userAgent\": \"string\",\n      \"createdAt\": \"1961-07-21T23:49:53.402Z\",\n      \"user\": {\n        \"id\": \"f7216cbe-326b-c903-721c-b676ee81753e\",\n        \"email\": \"6Nfw9fk@tyqKwlXDqfScF.spa\",\n        \"role\": \"ADMIN\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 50,\n    \"totalItems\": 250,\n    \"totalPages\": 5\n  }\n}"
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=desc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad&entityType=Book&action=book.created&userId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=desc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad&entityType=Book&action=book.created&userId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=desc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad&entityType=Book&action=book.created&userId=cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "desc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "cf123281-0e53-5d23-1ec0-6fcf1eeba0ad",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "health",
          "item": [
            {
              "name": "Health check endpoint",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": "{{baseUrl}}/api/health",
                "description": "Checks the health of system components including database and optional SMTP connectivity. Used for monitoring and deployment orchestration."
              },
              "response": [
                {
                  "name": "Health check completed successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{baseUrl}}/api/health"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n  \"uptime\": 3600,\n  \"checks\": {\n    \"database\": {\n      \"status\": \"ok\",\n      \"latency\": 15,\n      \"error\": \"string\"\n    },\n    \"smtp\": {\n      \"status\": \"ok\",\n      \"latency\": 50,\n      \"error\": \"string\"\n    }\n  }\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "App Controller get Hello",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/api"
          },
          "response": [
            {
              "name": "Untitled Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{baseUrl}}/api"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    }
  ]
}

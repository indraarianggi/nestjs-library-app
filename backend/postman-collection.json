{
  "info": {
    "_postman_id": "71177710-b048-4aca-8b09-8ee7ae554726",
    "name": "Library Management System API",
    "description": "RESTful API for a comprehensive Library Management System. This API provides endpoints for managing books, authors, categories, book copies, members, loans, and system settings.\n\nContact Support:\n Name: Library Management Team\n Email: support@library-management.com",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
    "_exporter_id": "3712556"
  },
  "item": [
    {
      "name": "api",
      "item": [
        {
          "name": "members",
          "item": [
            {
              "name": "register",
              "item": [
                {
                  "name": "Register a new member",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "if (pm.response.code === 200) {",
                          "    var jsonData = pm.response.json();",
                          "    pm.environment.set('bearerToken', jsonData.tokens.accessToken);",
                          "    pm.environment.set('refreshToken', jsonData.tokens.refreshToken);",
                          "}"
                        ],
                        "type": "text/javascript",
                        "packages": {},
                        "requests": {}
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/register",
                    "description": "Creates a new user account and member profile. Returns the created user, member profile, and JWT access/refresh tokens for immediate authentication."
                  },
                  "response": [
                    {
                      "name": "Member successfully registered",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/register"
                      },
                      "status": "Created",
                      "code": 201,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"user\": {\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"email\": \"john.doe@example.com\",\n    \"role\": \"MEMBER\",\n    \"isActive\": true,\n    \"createdAt\": \"1970-11-09T02:59:10.818Z\",\n    \"updatedAt\": \"1971-03-04T14:01:16.502Z\"\n  },\n  \"memberProfile\": {\n    \"id\": \"bbe83c24-ca71-390d-8ea9-71b13cedbfe9\",\n    \"userId\": \"973385c1-2edc-db0d-57ae-00edd25ce430\",\n    \"membershipNumber\": \"LIB-2024-0001\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"phone\": \"+1234567890\",\n    \"address\": \"string\",\n    \"membershipStatus\": \"ACTIVE\",\n    \"membershipStartDate\": \"2013-07-29T12:44:44.627Z\",\n    \"membershipEndDate\": \"1948-10-06T10:54:02.923Z\",\n    \"createdAt\": \"1968-10-02T16:27:11.910Z\",\n    \"updatedAt\": \"1987-03-27T06:02:01.492Z\"\n  },\n  \"tokens\": {\n    \"accessToken\": \"string\",\n    \"refreshToken\": \"string\"\n  }\n}"
                    },
                    {
                      "name": "Invalid input data or email already exists",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City, State 12345\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/register"
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 400,\n  \"message\": \"Email already exists\",\n  \"errors\": [\n    {\n      \"field\": \"email\",\n      \"message\": \"Email already exists\"\n    },\n    {\n      \"field\": \"email\",\n      \"message\": \"Email already exists\"\n    }\n  ]\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "login",
              "item": [
                {
                  "name": "Login with email and password",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "if (pm.response.code === 200) {",
                          "    var jsonData = pm.response.json();",
                          "    pm.environment.set('bearerToken', jsonData.tokens.accessToken);",
                          "    pm.environment.set('refreshToken', jsonData.tokens.refreshToken);",
                          "}"
                        ],
                        "type": "text/javascript",
                        "packages": {},
                        "requests": {}
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/login",
                    "description": "Authenticates a user with email and password. Returns JWT access and refresh tokens. Rate limited to 10 requests per minute to prevent brute force attacks."
                  },
                  "response": [
                    {
                      "name": "Login successful",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/login"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"user\": {\n    \"id\": \"e4afdc6b-a987-97ce-3180-49f0c9fcccc2\",\n    \"email\": \"6R7leojcUk@hskOeDtvhLwH.ixxp\",\n    \"role\": \"ADMIN\",\n    \"isActive\": false\n  },\n  \"memberProfile\": {},\n  \"tokens\": {\n    \"accessToken\": \"string\",\n    \"refreshToken\": \"string\"\n  }\n}"
                    },
                    {
                      "name": "Invalid credentials or account suspended",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/login"
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid email or password\"\n}"
                    },
                    {
                      "name": "Too many login attempts",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/login"
                      },
                      "status": "Too Many Requests",
                      "code": 429,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 429,\n  \"message\": \"Too Many Requests\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "refresh",
              "item": [
                {
                  "name": "Refresh access and refresh tokens",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "exec": [
                          "if (pm.response.code === 200) {",
                          "    var jsonData = pm.response.json();",
                          "    pm.environment.set('bearerToken', jsonData.accessToken);",
                          "    pm.environment.set('refreshToken', jsonData.refreshToken);",
                          "}"
                        ],
                        "type": "text/javascript",
                        "packages": {},
                        "requests": {}
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/refresh",
                    "description": "Uses a valid refresh token to generate new access and refresh tokens. The old refresh token is revoked after successful refresh."
                  },
                  "response": [
                    {
                      "name": "Tokens refreshed successfully",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/refresh"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"accessToken\": \"string\",\n  \"refreshToken\": \"string\"\n}"
                    },
                    {
                      "name": "Invalid or expired refresh token",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/refresh"
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 401,\n  \"message\": \"Invalid refresh token\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "logout",
              "item": [
                {
                  "name": "Logout user",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/members/logout",
                    "description": "Logs out the user by revoking their refresh token. The access token will remain valid until it expires (1 hour)."
                  },
                  "response": [
                    {
                      "name": "Logout successful",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/logout"
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"message\": \"Logout successful\"\n}"
                    },
                    {
                      "name": "Invalid or expired refresh token",
                      "originalRequest": {
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": "{{baseUrl}}/api/members/logout"
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"statusCode\": 401,\n  \"message\": \"Unauthorized\"\n}"
                    }
                  ]
                }
              ]
            },
            {
              "name": "{id}",
              "item": [
                {
                  "name": "activate",
                  "item": [
                    {
                      "name": "Activate a member",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id/activate",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id", "activate"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Member profile UUID"
                            }
                          ]
                        },
                        "description": "Changes member status from PENDING to ACTIVE. Admin only."
                      },
                      "response": [
                        {
                          "name": "Member activated successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/activate",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "activate"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/activate",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "activate"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member already active",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/activate",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "activate"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "suspend",
                  "item": [
                    {
                      "name": "Suspend a member",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"reason\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id/suspend",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id", "suspend"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Member profile UUID"
                            }
                          ]
                        },
                        "description": "Changes member status from ACTIVE to SUSPENDED. Admin only."
                      },
                      "response": [
                        {
                          "name": "Member suspended successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"reason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/suspend",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "suspend"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"reason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/suspend",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "suspend"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Member already suspended",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"reason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/members/:id/suspend",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "members", ":id", "suspend"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get member details",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/members/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Member profile UUID"
                        }
                      ]
                    },
                    "description": "Retrieves detailed information about a specific member. Admin only."
                  },
                  "response": [
                    {
                      "name": "Member retrieved successfully",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Member not found",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Update member profile",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/members/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Member profile UUID"
                        }
                      ]
                    },
                    "description": "Updates member profile information. Admin only."
                  },
                  "response": [
                    {
                      "name": "Member updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Member not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"firstName\": \"string\",\n  \"lastName\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"notes\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/members/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "members", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all members",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "members"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "asc"
                    },
                    {
                      "key": "sortBy",
                      "value": "lastName"
                    },
                    {
                      "key": "status",
                      "value": "EXPIRED"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search by name or email"
                    },
                    {
                      "key": "pageSize",
                      "value": "3811.2137350153507"
                    },
                    {
                      "key": "page",
                      "value": "3811.2137350153507"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of members with loan statistics. Admin only."
              },
              "response": [
                {
                  "name": "Members retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc"
                        },
                        {
                          "key": "sortBy",
                          "value": "lastName"
                        },
                        {
                          "key": "status",
                          "value": "EXPIRED"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search by name or email"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc"
                        },
                        {
                          "key": "sortBy",
                          "value": "lastName"
                        },
                        {
                          "key": "status",
                          "value": "EXPIRED"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search by name or email"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/members?sortOrder=asc&sortBy=lastName&status=EXPIRED&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "members"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc"
                        },
                        {
                          "key": "sortBy",
                          "value": "lastName"
                        },
                        {
                          "key": "status",
                          "value": "EXPIRED"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search by name or email"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "authors",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Update an author",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/authors/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Author UUID"
                        }
                      ]
                    },
                    "description": "Updates an existing author. Admin only."
                  },
                  "response": [
                    {
                      "name": "Author updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Author not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"bio\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete an author",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/authors/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Author UUID"
                        }
                      ]
                    },
                    "description": "Deletes an author if not referenced by any books. Admin only."
                  },
                  "response": [
                    {
                      "name": "Author deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Author not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Author is referenced by books and cannot be deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/authors/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "authors", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all authors",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/authors?sortOrder=asc&sortBy=name&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "authors"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "asc",
                      "description": "Sort order"
                    },
                    {
                      "key": "sortBy",
                      "value": "name",
                      "description": "Sort field"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search query for author name"
                    },
                    {
                      "key": "pageSize",
                      "value": "3811.2137350153507",
                      "description": "Items per page (default: 10, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "3811.2137350153507",
                      "description": "Page number (default: 1)"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of authors with search and sorting."
              },
              "response": [
                {
                  "name": "Authors retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/authors?sortOrder=asc&sortBy=name&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/authors?sortOrder=asc&sortBy=name&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "authors"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a new author",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/authors",
                "description": "Creates a new author. Admin only."
              },
              "response": [
                {
                  "name": "Author created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input data or author already exists",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"F. Scott Fitzgerald\",\n  \"bio\": \"American novelist and short story writer\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/authors"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "categories",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "Update a category",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/categories/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Category UUID"
                        }
                      ]
                    },
                    "description": "Updates an existing category. Admin only."
                  },
                  "response": [
                    {
                      "name": "Category updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Category not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a category",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/categories/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Category UUID"
                        }
                      ]
                    },
                    "description": "Deletes a category if not referenced by any books. Admin only."
                  },
                  "response": [
                    {
                      "name": "Category deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Category not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Category is referenced by books and cannot be deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/categories/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "categories", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all categories",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/categories?sortOrder=asc&sortBy=name&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "categories"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "asc",
                      "description": "Sort order"
                    },
                    {
                      "key": "sortBy",
                      "value": "name",
                      "description": "Sort field"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search query for category name"
                    },
                    {
                      "key": "pageSize",
                      "value": "3811.2137350153507",
                      "description": "Items per page (default: 10, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "3811.2137350153507",
                      "description": "Page number (default: 1)"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of categories with search and sorting."
              },
              "response": [
                {
                  "name": "Categories retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/categories?sortOrder=asc&sortBy=name&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for category name"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/categories?sortOrder=asc&sortBy=name&q=string&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "categories"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort order"
                        },
                        {
                          "key": "sortBy",
                          "value": "name",
                          "description": "Sort field"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for category name"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a new category",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/categories",
                "description": "Creates a new category. Admin only."
              },
              "response": [
                {
                  "name": "Category created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input data or category already exists",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"name\": \"Fiction\",\n  \"description\": \"Fictional literature including novels and short stories\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/categories"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "books",
          "item": [
            {
              "name": "{id}",
              "item": [
                {
                  "name": "copies",
                  "item": [
                    {
                      "name": "List copies for a book",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=3811.2137350153507&page=3811.2137350153507",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id", "copies"],
                          "query": [
                            {
                              "key": "status",
                              "value": "ON_LOAN",
                              "description": "Filter by copy status"
                            },
                            {
                              "key": "pageSize",
                              "value": "3811.2137350153507",
                              "description": "Items per page (default: 10, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "3811.2137350153507",
                              "description": "Page number (default: 1)"
                            }
                          ],
                          "variable": [
                            {
                              "key": "id",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Book UUID"
                            }
                          ]
                        },
                        "description": "Retrieves all physical copies for a specific book. Admin only."
                      },
                      "response": [
                        {
                          "name": "Copies retrieved successfully",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=3811.2137350153507&page=3811.2137350153507",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "3811.2137350153507",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "3811.2137350153507",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authenticated",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=3811.2137350153507&page=3811.2137350153507",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "3811.2137350153507",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "3811.2137350153507",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized (ADMIN only)",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=3811.2137350153507&page=3811.2137350153507",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "3811.2137350153507",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "3811.2137350153507",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Book not found",
                          "originalRequest": {
                            "method": "GET",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies?status=ON_LOAN&pageSize=3811.2137350153507&page=3811.2137350153507",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "query": [
                                {
                                  "key": "status",
                                  "value": "ON_LOAN",
                                  "description": "Filter by copy status"
                                },
                                {
                                  "key": "pageSize",
                                  "value": "3811.2137350153507",
                                  "description": "Items per page (default: 10, max: 100)"
                                },
                                {
                                  "key": "page",
                                  "value": "3811.2137350153507",
                                  "description": "Page number (default: 1)"
                                }
                              ],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    },
                    {
                      "name": "Add copies to a book",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id/copies",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id", "copies"],
                          "variable": [
                            {
                              "key": "id",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Book UUID"
                            }
                          ]
                        },
                        "description": "Adds multiple physical copies to a book. Admin only."
                      },
                      "response": [
                        {
                          "name": "Copies added successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Created",
                          "code": 201,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Invalid input data",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Bad Request",
                          "code": 400,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authenticated",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Unauthorized",
                          "code": 401,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized (ADMIN only)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Book not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"count\": 5,\n  \"locationCode\": \"SHELF-A1\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/books/:id/copies",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "books", ":id", "copies"],
                              "variable": [
                                {
                                  "key": "id"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Get a book by ID",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/books/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Book UUID"
                        }
                      ]
                    },
                    "description": "Retrieves detailed information about a specific book including authors, categories, and copy availability."
                  },
                  "response": [
                    {
                      "name": "Book retrieved successfully",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"book\": {\n    \"id\": \"ca81600a-a31b-0f09-b34f-be88c3044efc\",\n    \"title\": \"string\",\n    \"subtitle\": \"string\",\n    \"description\": \"string\",\n    \"isbn\": \"string\",\n    \"publicationYear\": 1981.139045743303,\n    \"language\": \"string\",\n    \"coverImageUrl\": \"https://oQorLkfMarScLtvHialzOEJKEbLLTGm.cctdOL0EyjKadjTA3NF-MSWX\",\n    \"status\": \"ARCHIVED\",\n    \"availableCopies\": 4403.942576001092,\n    \"totalCopies\": 756.5216142124109\n  }\n}"
                    },
                    {
                      "name": "Book not found or archived",
                      "originalRequest": {
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Update a book",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 4809.941473736469,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://UkIn.qesakQxHGe85bWWbRKvxJdjUzO6t1c,AbHB7PIfRYz-LSt3MnT-lZqMdrb3ZmFgBw,bh93\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"e21d3400-0ff7-3971-d3eb-6c5b9a3b6e50\",\n    \"a11049d6-405f-ac9c-b607-5e46418020fd\"\n  ],\n  \"categoryIds\": [\n    \"4b6b2c71-7120-4825-2226-336f28cce272\",\n    \"c2d30e31-d91d-ed80-3b1d-8a426fbdd613\"\n  ]\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/books/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Book UUID"
                        }
                      ]
                    },
                    "description": "Updates an existing book. Admin only. All fields are optional."
                  },
                  "response": [
                    {
                      "name": "Book updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 4809.941473736469,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://UkIn.qesakQxHGe85bWWbRKvxJdjUzO6t1c,AbHB7PIfRYz-LSt3MnT-lZqMdrb3ZmFgBw,bh93\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"e21d3400-0ff7-3971-d3eb-6c5b9a3b6e50\",\n    \"a11049d6-405f-ac9c-b607-5e46418020fd\"\n  ],\n  \"categoryIds\": [\n    \"4b6b2c71-7120-4825-2226-336f28cce272\",\n    \"c2d30e31-d91d-ed80-3b1d-8a426fbdd613\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 4809.941473736469,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://UkIn.qesakQxHGe85bWWbRKvxJdjUzO6t1c,AbHB7PIfRYz-LSt3MnT-lZqMdrb3ZmFgBw,bh93\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"e21d3400-0ff7-3971-d3eb-6c5b9a3b6e50\",\n    \"a11049d6-405f-ac9c-b607-5e46418020fd\"\n  ],\n  \"categoryIds\": [\n    \"4b6b2c71-7120-4825-2226-336f28cce272\",\n    \"c2d30e31-d91d-ed80-3b1d-8a426fbdd613\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 4809.941473736469,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://UkIn.qesakQxHGe85bWWbRKvxJdjUzO6t1c,AbHB7PIfRYz-LSt3MnT-lZqMdrb3ZmFgBw,bh93\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"e21d3400-0ff7-3971-d3eb-6c5b9a3b6e50\",\n    \"a11049d6-405f-ac9c-b607-5e46418020fd\"\n  ],\n  \"categoryIds\": [\n    \"4b6b2c71-7120-4825-2226-336f28cce272\",\n    \"c2d30e31-d91d-ed80-3b1d-8a426fbdd613\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 4809.941473736469,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://UkIn.qesakQxHGe85bWWbRKvxJdjUzO6t1c,AbHB7PIfRYz-LSt3MnT-lZqMdrb3ZmFgBw,bh93\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"e21d3400-0ff7-3971-d3eb-6c5b9a3b6e50\",\n    \"a11049d6-405f-ac9c-b607-5e46418020fd\"\n  ],\n  \"categoryIds\": [\n    \"4b6b2c71-7120-4825-2226-336f28cce272\",\n    \"c2d30e31-d91d-ed80-3b1d-8a426fbdd613\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Book not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"title\": \"string\",\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"isbn\": \"string\",\n  \"publicationYear\": 4809.941473736469,\n  \"language\": \"string\",\n  \"coverImageUrl\": \"https://UkIn.qesakQxHGe85bWWbRKvxJdjUzO6t1c,AbHB7PIfRYz-LSt3MnT-lZqMdrb3ZmFgBw,bh93\",\n  \"status\": \"ACTIVE\",\n  \"authorIds\": [\n    \"e21d3400-0ff7-3971-d3eb-6c5b9a3b6e50\",\n    \"a11049d6-405f-ac9c-b607-5e46418020fd\"\n  ],\n  \"categoryIds\": [\n    \"4b6b2c71-7120-4825-2226-336f28cce272\",\n    \"c2d30e31-d91d-ed80-3b1d-8a426fbdd613\"\n  ]\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a book",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/books/:id",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books", ":id"],
                      "variable": [
                        {
                          "key": "id",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Book UUID"
                        }
                      ]
                    },
                    "description": "Permanently deletes a book if it has no loan history. If loans exist, the book should be archived instead. Admin only."
                  },
                  "response": [
                    {
                      "name": "Book deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Book not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Book has loan history and cannot be deleted. Archive it instead.",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/books/:id",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "books", ":id"],
                          "variable": [
                            {
                              "key": "id"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all books",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/books?sortOrder=asc&sortBy=relevance&availability=ALL&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "books"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "asc",
                      "description": "Sort order (default: asc)"
                    },
                    {
                      "key": "sortBy",
                      "value": "relevance",
                      "description": "Sort field (default: relevance if searching, createdAt otherwise)"
                    },
                    {
                      "key": "availability",
                      "value": "ALL",
                      "description": "Filter by availability status"
                    },
                    {
                      "key": "categoryId",
                      "value": "string",
                      "description": "Filter by category UUID"
                    },
                    {
                      "key": "authorId",
                      "value": "string",
                      "description": "Filter by author UUID"
                    },
                    {
                      "key": "q",
                      "value": "string",
                      "description": "Search query for title and author name"
                    },
                    {
                      "key": "pageSize",
                      "value": "10",
                      "description": "Items per page (default: 10, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (default: 1)"
                    }
                  ]
                },
                "description": "Retrieves a paginated list of books with support for search, filtering, and sorting. Public endpoint accessible without authentication."
              },
              "response": [
                {
                  "name": "Books retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/books?sortOrder=asc&sortBy=relevance&availability=ALL&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort order (default: asc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "relevance",
                          "description": "Sort field (default: relevance if searching, createdAt otherwise)"
                        },
                        {
                          "key": "availability",
                          "value": "ALL",
                          "description": "Filter by availability status"
                        },
                        {
                          "key": "categoryId",
                          "value": "string",
                          "description": "Filter by category UUID"
                        },
                        {
                          "key": "authorId",
                          "value": "string",
                          "description": "Filter by author UUID"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for title and author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "10",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"books\": [\n    {\n      \"id\": \"ff69b3d9-b693-0f84-26ea-131b6f42f167\",\n      \"title\": \"The Great Gatsby\",\n      \"subtitle\": \"string\",\n      \"description\": \"string\",\n      \"isbn\": \"978-0743273565\",\n      \"publicationYear\": 1925,\n      \"language\": \"English\",\n      \"coverImageUrl\": \"http://V.iiQShKWY2J5CXaQ7hzND.8-pjLR2GfBarN+5ld2zBB+L8\",\n      \"status\": \"ACTIVE\",\n      \"availableCopies\": 3,\n      \"totalCopies\": 5\n    },\n    {\n      \"id\": \"04f1907b-203d-6772-7c1a-12a7a540b0fd\",\n      \"title\": \"The Great Gatsby\",\n      \"subtitle\": \"string\",\n      \"description\": \"string\",\n      \"isbn\": \"978-0743273565\",\n      \"publicationYear\": 1925,\n      \"language\": \"English\",\n      \"coverImageUrl\": \"http://x.bgfTooMk-p1AbGTjSieyF-SwVYwu8Fx\",\n      \"status\": \"ACTIVE\",\n      \"availableCopies\": 3,\n      \"totalCopies\": 5\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 10,\n    \"totalItems\": 100,\n    \"totalPages\": 10\n  }\n}"
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/books?sortOrder=asc&sortBy=relevance&availability=ALL&categoryId=string&authorId=string&q=string&pageSize=10&page=1",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "books"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort order (default: asc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "relevance",
                          "description": "Sort field (default: relevance if searching, createdAt otherwise)"
                        },
                        {
                          "key": "availability",
                          "value": "ALL",
                          "description": "Filter by availability status"
                        },
                        {
                          "key": "categoryId",
                          "value": "string",
                          "description": "Filter by category UUID"
                        },
                        {
                          "key": "authorId",
                          "value": "string",
                          "description": "Filter by author UUID"
                        },
                        {
                          "key": "q",
                          "value": "string",
                          "description": "Search query for title and author name"
                        },
                        {
                          "key": "pageSize",
                          "value": "10",
                          "description": "Items per page (default: 10, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a new book",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"cea39b87-25a5-d41c-87e1-98d6e49d2f49\"\n  ],\n  \"categoryIds\": [\n    \"c311168a-1918-9a22-bcf6-138c5effe49d\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://bLSORFjFXWmLHigolCxSsFro.uiOXGkgP4nha\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/books",
                "description": "Creates a new book in the catalog. Admin only. Validates ISBN format and uniqueness."
              },
              "response": [
                {
                  "name": "Book created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"cea39b87-25a5-d41c-87e1-98d6e49d2f49\"\n  ],\n  \"categoryIds\": [\n    \"c311168a-1918-9a22-bcf6-138c5effe49d\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://bLSORFjFXWmLHigolCxSsFro.uiOXGkgP4nha\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input data or ISBN already exists",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"cea39b87-25a5-d41c-87e1-98d6e49d2f49\"\n  ],\n  \"categoryIds\": [\n    \"c311168a-1918-9a22-bcf6-138c5effe49d\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://bLSORFjFXWmLHigolCxSsFro.uiOXGkgP4nha\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"cea39b87-25a5-d41c-87e1-98d6e49d2f49\"\n  ],\n  \"categoryIds\": [\n    \"c311168a-1918-9a22-bcf6-138c5effe49d\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://bLSORFjFXWmLHigolCxSsFro.uiOXGkgP4nha\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"title\": \"The Great Gatsby\",\n  \"isbn\": \"978-0743273565\",\n  \"authorIds\": [\n    \"cea39b87-25a5-d41c-87e1-98d6e49d2f49\"\n  ],\n  \"categoryIds\": [\n    \"c311168a-1918-9a22-bcf6-138c5effe49d\"\n  ],\n  \"subtitle\": \"string\",\n  \"description\": \"string\",\n  \"publicationYear\": 1925,\n  \"language\": \"English\",\n  \"coverImageUrl\": \"https://bLSORFjFXWmLHigolCxSsFro.uiOXGkgP4nha\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/books"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "copies",
          "item": [
            {
              "name": "{copyId}",
              "item": [
                {
                  "name": "Update a book copy",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/api/copies/:copyId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "copies", ":copyId"],
                      "variable": [
                        {
                          "key": "copyId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Copy UUID"
                        }
                      ]
                    },
                    "description": "Updates a physical copy. Cannot set status to AVAILABLE if copy has an open loan. Admin only."
                  },
                  "response": [
                    {
                      "name": "Copy updated successfully",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Invalid input data or business rule violation",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Copy not found",
                      "originalRequest": {
                        "method": "PATCH",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"status\": \"AVAILABLE\",\n  \"locationCode\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                },
                {
                  "name": "Delete a book copy",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "DELETE",
                    "header": [],
                    "url": {
                      "raw": "{{baseUrl}}/api/copies/:copyId",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "copies", ":copyId"],
                      "variable": [
                        {
                          "key": "copyId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Copy UUID"
                        }
                      ]
                    },
                    "description": "Deletes a physical copy if it has no loan history. Admin only."
                  },
                  "response": [
                    {
                      "name": "Copy deleted successfully",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "No Content",
                      "code": 204,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (ADMIN only)",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Copy not found",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Not Found",
                      "code": 404,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Copy has loan history and cannot be deleted",
                      "originalRequest": {
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/copies/:copyId",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "copies", ":copyId"],
                          "variable": [
                            {
                              "key": "copyId"
                            }
                          ]
                        }
                      },
                      "status": "Conflict",
                      "code": 409,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "settings",
          "item": [
            {
              "name": "Get system settings",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": "{{baseUrl}}/api/settings",
                "description": "Retrieves current system configuration including borrowing policy, notification settings, and operational parameters. Admin only."
              },
              "response": [
                {
                  "name": "Settings retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"b48e6675-d8be-97aa-8425-5debf4f8d58d\",\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\",\n  \"createdAt\": \"2021-05-16T19:56:28.276Z\",\n  \"updatedAt\": \"2021-12-29T20:48:46.684Z\"\n}"
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Update system settings",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "PATCH",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/settings",
                "description": "Updates system configuration. All fields are optional. Changes are logged and take effect based on the setting type. Admin only."
              },
              "response": [
                {
                  "name": "Settings updated successfully",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"id\": \"1ae8e390-74ec-2aab-58f6-c7241950809a\",\n  \"approvalsRequired\": true,\n  \"loanDays\": 5310.3435488296855,\n  \"renewalDays\": 2475.7277340208384,\n  \"renewalMinDaysBeforeDue\": 7650.05577302879,\n  \"maxRenewals\": 9490.861051010943,\n  \"overdueFeePerDay\": 3254.5234261262635,\n  \"overdueFeeCapPerLoan\": 4660.429183518681,\n  \"currency\": \"IDR\",\n  \"maxConcurrentLoans\": 3610.509531341197,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 5273.805057203677,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"IYZwvE5vyj@fWHIOHffKrgTsgKgGzUNDJxXufgO.re\",\n  \"smtpProvider\": \"MAILGUN\",\n  \"sendHourUTC\": 3140.422532739553,\n  \"timeZone\": \"string\",\n  \"createdAt\": \"1995-07-15T23:28:06.965Z\",\n  \"updatedAt\": \"1956-07-25T19:54:43.025Z\"\n}"
                },
                {
                  "name": "Invalid input data",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "PATCH",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"approvalsRequired\": false,\n  \"loanDays\": 14,\n  \"renewalDays\": 7,\n  \"renewalMinDaysBeforeDue\": 3,\n  \"maxRenewals\": 2,\n  \"overdueFeePerDay\": 1,\n  \"overdueFeeCapPerLoan\": 50,\n  \"currency\": \"USD\",\n  \"maxConcurrentLoans\": 5,\n  \"notificationsEnabled\": true,\n  \"dueSoonDays\": 3,\n  \"dueDateNotificationsEnabled\": true,\n  \"fromEmail\": \"noreply@library.com\",\n  \"smtpProvider\": \"GMAIL\",\n  \"sendHourUTC\": 9,\n  \"timeZone\": \"UTC\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/settings"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "loans",
          "item": [
            {
              "name": "{loanId}",
              "item": [
                {
                  "name": "approve-reject",
                  "item": [
                    {
                      "name": "Approve or reject a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"ba274f94-0835-43f0-2195-7182b3e45c93\",\n  \"rejectionReason\": \"string\"\n}",
                          "options": {
                            "raw": {
                              "headerFamily": "json",
                              "language": "json"
                            }
                          }
                        },
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "approve-reject"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Admin approves or rejects a pending loan request. Admin only."
                      },
                      "response": [
                        {
                          "name": "Loan approved/rejected successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"ba274f94-0835-43f0-2195-7182b3e45c93\",\n  \"rejectionReason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "loans",
                                ":loanId",
                                "approve-reject"
                              ],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"ba274f94-0835-43f0-2195-7182b3e45c93\",\n  \"rejectionReason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "loans",
                                ":loanId",
                                "approve-reject"
                              ],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not in REQUESTED status or copy unavailable",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Content-Type",
                                "value": "application/json"
                              },
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "body": {
                              "mode": "raw",
                              "raw": "{\n  \"isApproved\": false,\n  \"copyId\": \"ba274f94-0835-43f0-2195-7182b3e45c93\",\n  \"rejectionReason\": \"string\"\n}",
                              "options": {
                                "raw": {
                                  "headerFamily": "json",
                                  "language": "json"
                                }
                              }
                            },
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/approve-reject",
                              "host": ["{{baseUrl}}"],
                              "path": [
                                "api",
                                "loans",
                                ":loanId",
                                "approve-reject"
                              ],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "renew",
                  "item": [
                    {
                      "name": "Renew a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "renew"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Extends the due date of an active loan. Member (loan owner) or Admin."
                      },
                      "response": [
                        {
                          "name": "Loan renewed successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized or suspended member",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Renewal not allowed (max renewals, overdue, etc.)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/renew",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "renew"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "cancel",
                  "item": [
                    {
                      "name": "Cancel a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "cancel"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Cancels a pending or approved loan. Member (loan owner) or Admin."
                      },
                      "response": [
                        {
                          "name": "Loan cancelled successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan cannot be cancelled (already active or returned)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/cancel",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "cancel"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "checkout",
                  "item": [
                    {
                      "name": "Checkout a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "checkout"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Marks an approved loan as active when member picks up the book. Admin only."
                      },
                      "response": [
                        {
                          "name": "Loan checked out successfully",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized (ADMIN only)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not in APPROVED status or member suspended",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/checkout",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "checkout"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "return",
                  "item": [
                    {
                      "name": "Return a loan",
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": {
                            "token": "{{bearerToken}}"
                          }
                        },
                        "method": "POST",
                        "header": [],
                        "url": {
                          "raw": "{{baseUrl}}/api/loans/:loanId/return",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "loans", ":loanId", "return"],
                          "variable": [
                            {
                              "key": "loanId",
                              "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                              "description": "Loan UUID"
                            }
                          ]
                        },
                        "description": "Marks a loan as returned and calculates any overdue penalties. Member (loan owner) or Admin."
                      },
                      "response": [
                        {
                          "name": "Loan returned successfully (includes penalty if applicable)",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "OK",
                          "code": 200,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Not authorized",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Forbidden",
                          "code": 403,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan not found",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Not Found",
                          "code": 404,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        },
                        {
                          "name": "Loan already returned or invalid status",
                          "originalRequest": {
                            "method": "POST",
                            "header": [
                              {
                                "key": "Authorization",
                                "value": "Bearer <token>",
                                "description": "Added as a part of security scheme: bearer"
                              }
                            ],
                            "url": {
                              "raw": "{{baseUrl}}/api/loans/:loanId/return",
                              "host": ["{{baseUrl}}"],
                              "path": ["api", "loans", ":loanId", "return"],
                              "variable": [
                                {
                                  "key": "loanId"
                                }
                              ]
                            }
                          },
                          "status": "Conflict",
                          "code": 409,
                          "_postman_previewlanguage": "text",
                          "header": [],
                          "cookie": [],
                          "body": ""
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "name": "List all loans (Admin)",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/loans?sortOrder=asc&sortBy=status&dueAfter=2019-06-16&dueBefore=2019-06-16&bookId=string&memberId=string&status=CANCELLED&pageSize=3811.2137350153507&page=3811.2137350153507",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "loans"],
                  "query": [
                    {
                      "key": "sortOrder",
                      "value": "asc"
                    },
                    {
                      "key": "sortBy",
                      "value": "status"
                    },
                    {
                      "key": "dueAfter",
                      "value": "2019-06-16"
                    },
                    {
                      "key": "dueBefore",
                      "value": "2019-06-16"
                    },
                    {
                      "key": "bookId",
                      "value": "string"
                    },
                    {
                      "key": "memberId",
                      "value": "string"
                    },
                    {
                      "key": "status",
                      "value": "CANCELLED"
                    },
                    {
                      "key": "pageSize",
                      "value": "3811.2137350153507"
                    },
                    {
                      "key": "page",
                      "value": "3811.2137350153507"
                    }
                  ]
                },
                "description": "Retrieves all loans in the system with filtering and pagination. Admin only."
              },
              "response": [
                {
                  "name": "Loans retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/loans?sortOrder=asc&sortBy=status&dueAfter=2019-06-16&dueBefore=2019-06-16&bookId=string&memberId=string&status=CANCELLED&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "loans"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc"
                        },
                        {
                          "key": "sortBy",
                          "value": "status"
                        },
                        {
                          "key": "dueAfter",
                          "value": "2019-06-16"
                        },
                        {
                          "key": "dueBefore",
                          "value": "2019-06-16"
                        },
                        {
                          "key": "bookId",
                          "value": "string"
                        },
                        {
                          "key": "memberId",
                          "value": "string"
                        },
                        {
                          "key": "status",
                          "value": "CANCELLED"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/loans?sortOrder=asc&sortBy=status&dueAfter=2019-06-16&dueBefore=2019-06-16&bookId=string&memberId=string&status=CANCELLED&pageSize=3811.2137350153507&page=3811.2137350153507",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "loans"],
                      "query": [
                        {
                          "key": "sortOrder",
                          "value": "asc"
                        },
                        {
                          "key": "sortBy",
                          "value": "status"
                        },
                        {
                          "key": "dueAfter",
                          "value": "2019-06-16"
                        },
                        {
                          "key": "dueBefore",
                          "value": "2019-06-16"
                        },
                        {
                          "key": "bookId",
                          "value": "string"
                        },
                        {
                          "key": "memberId",
                          "value": "string"
                        },
                        {
                          "key": "status",
                          "value": "CANCELLED"
                        },
                        {
                          "key": "pageSize",
                          "value": "3811.2137350153507"
                        },
                        {
                          "key": "page",
                          "value": "3811.2137350153507"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            },
            {
              "name": "Create a loan (borrow a book)",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"bookId\": \"52f15b0d-d2ae-a5ac-786a-20004a76ee13\",\n  \"copyId\": \"fd29e8fa-91bd-12e3-de1c-e3d09f2c00dc\"\n}",
                  "options": {
                    "raw": {
                      "headerFamily": "json",
                      "language": "json"
                    }
                  }
                },
                "url": "{{baseUrl}}/api/loans",
                "description": "Creates a new loan for the authenticated member. Member only."
              },
              "response": [
                {
                  "name": "Loan created successfully",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"52f15b0d-d2ae-a5ac-786a-20004a76ee13\",\n  \"copyId\": \"fd29e8fa-91bd-12e3-de1c-e3d09f2c00dc\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Created",
                  "code": 201,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Invalid input or member ineligible",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"52f15b0d-d2ae-a5ac-786a-20004a76ee13\",\n  \"copyId\": \"fd29e8fa-91bd-12e3-de1c-e3d09f2c00dc\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Member suspended or max loans exceeded",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"52f15b0d-d2ae-a5ac-786a-20004a76ee13\",\n  \"copyId\": \"fd29e8fa-91bd-12e3-de1c-e3d09f2c00dc\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Book not found",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"52f15b0d-d2ae-a5ac-786a-20004a76ee13\",\n  \"copyId\": \"fd29e8fa-91bd-12e3-de1c-e3d09f2c00dc\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Not Found",
                  "code": 404,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "No available copies",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"bookId\": \"52f15b0d-d2ae-a5ac-786a-20004a76ee13\",\n  \"copyId\": \"fd29e8fa-91bd-12e3-de1c-e3d09f2c00dc\"\n}",
                      "options": {
                        "raw": {
                          "headerFamily": "json",
                          "language": "json"
                        }
                      }
                    },
                    "url": "{{baseUrl}}/api/loans"
                  },
                  "status": "Conflict",
                  "code": 409,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "my",
          "item": [
            {
              "name": "loans",
              "item": [
                {
                  "name": "Get current member's loans",
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": {
                        "token": "{{bearerToken}}"
                      }
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=createdAt&status=CANCELLED",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "my", "loans"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "20",
                          "description": "Items per page (default: 20, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort direction (default: asc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: dueDate)"
                        },
                        {
                          "key": "status",
                          "value": "CANCELLED",
                          "description": "Filter by loan status"
                        }
                      ]
                    },
                    "description": "Retrieves the authenticated member's loans with computed fields (canRenew, isOverdue, daysUntilDue). Supports filtering by status and sorting. Member only."
                  },
                  "response": [
                    {
                      "name": "Member's loans retrieved successfully",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Accept",
                            "value": "application/json"
                          },
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=createdAt&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "asc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "createdAt",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "OK",
                      "code": 200,
                      "_postman_previewlanguage": "json",
                      "header": [
                        {
                          "key": "Content-Type",
                          "value": "application/json"
                        }
                      ],
                      "cookie": [],
                      "body": "{\n  \"loans\": [\n    {\n      \"id\": \"bfc399f1-cbee-3852-1857-05167f70835b\",\n      \"memberId\": \"b548dff1-7667-8d1a-3c79-2780f8de3273\",\n      \"bookCopyId\": \"f088f2d9-ba92-0b2f-4779-d7f4d06e7b7b\",\n      \"status\": \"APPROVED\",\n      \"requestedAt\": \"2002-01-31T07:42:04.454Z\",\n      \"approvedAt\": \"1975-04-22T03:00:38.411Z\",\n      \"borrowedAt\": \"2016-03-24T11:20:13.314Z\",\n      \"dueDate\": \"1978-08-03T23:58:16.224Z\",\n      \"returnedAt\": \"1964-10-11T13:19:31.620Z\",\n      \"renewalCount\": 0,\n      \"overdueFee\": 0,\n      \"rejectionReason\": \"string\",\n      \"bookCopy\": {\n        \"id\": \"fc26cdf8-895b-9f14-f844-a7260da1ddc9\",\n        \"copyNumber\": \"string\",\n        \"book\": {\n          \"id\": \"79d679e4-a130-b880-f0c3-ee35d48ad8e7\",\n          \"title\": \"string\",\n          \"subtitle\": \"string\",\n          \"isbn\": \"string\",\n          \"coverImageUrl\": \"string\"\n        }\n      },\n      \"canRenew\": false,\n      \"isOverdue\": false,\n      \"daysUntilDue\": 6952.286871456384\n    },\n    {\n      \"id\": \"ab3207ef-0800-de81-0d5a-ff0f788113d9\",\n      \"memberId\": \"71fd38de-4d3e-db8f-ff8b-c17fcbc7dfe7\",\n      \"bookCopyId\": \"01f730d0-ef96-cafd-4641-d7e4d63b3ea3\",\n      \"status\": \"OVERDUE\",\n      \"requestedAt\": \"1958-06-23T08:47:57.596Z\",\n      \"approvedAt\": \"2003-06-24T22:45:29.263Z\",\n      \"borrowedAt\": \"1949-11-10T07:31:37.966Z\",\n      \"dueDate\": \"1952-08-29T18:27:08.088Z\",\n      \"returnedAt\": \"1947-08-17T02:24:50.467Z\",\n      \"renewalCount\": 0,\n      \"overdueFee\": 0,\n      \"rejectionReason\": \"string\",\n      \"bookCopy\": {\n        \"id\": \"05df2dcc-ea60-5629-05be-e167d06c0886\",\n        \"copyNumber\": \"string\",\n        \"book\": {\n          \"id\": \"d44c2531-56da-6d55-db52-4e059252d6eb\",\n          \"title\": \"string\",\n          \"subtitle\": \"string\",\n          \"isbn\": \"string\",\n          \"coverImageUrl\": \"string\"\n        }\n      },\n      \"canRenew\": false,\n      \"isOverdue\": false,\n      \"daysUntilDue\": 3606.349355440395\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 20,\n    \"totalItems\": 5,\n    \"totalPages\": 1\n  }\n}"
                    },
                    {
                      "name": "Invalid query parameters",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=createdAt&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "asc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "createdAt",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "Bad Request",
                      "code": 400,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authenticated",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=createdAt&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "asc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "createdAt",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "Unauthorized",
                      "code": 401,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    },
                    {
                      "name": "Not authorized (MEMBER only)",
                      "originalRequest": {
                        "method": "GET",
                        "header": [
                          {
                            "key": "Authorization",
                            "value": "Bearer <token>",
                            "description": "Added as a part of security scheme: bearer"
                          }
                        ],
                        "url": {
                          "raw": "{{baseUrl}}/api/my/loans?pageSize=20&page=1&sortOrder=asc&sortBy=createdAt&status=CANCELLED",
                          "host": ["{{baseUrl}}"],
                          "path": ["api", "my", "loans"],
                          "query": [
                            {
                              "key": "pageSize",
                              "value": "20",
                              "description": "Items per page (default: 20, max: 100)"
                            },
                            {
                              "key": "page",
                              "value": "1",
                              "description": "Page number (default: 1)"
                            },
                            {
                              "key": "sortOrder",
                              "value": "asc",
                              "description": "Sort direction (default: asc)"
                            },
                            {
                              "key": "sortBy",
                              "value": "createdAt",
                              "description": "Field to sort by (default: dueDate)"
                            },
                            {
                              "key": "status",
                              "value": "CANCELLED",
                              "description": "Filter by loan status"
                            }
                          ]
                        }
                      },
                      "status": "Forbidden",
                      "code": 403,
                      "_postman_previewlanguage": "text",
                      "header": [],
                      "cookie": [],
                      "body": ""
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "audit-logs",
          "item": [
            {
              "name": "List audit logs",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": {
                    "token": "{{bearerToken}}"
                  }
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=b39420ad-5ccd-ccce-b12e-8792b6d01945&entityType=Book&action=book.created&userId=b39420ad-5ccd-ccce-b12e-8792b6d01945",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "audit-logs"],
                  "query": [
                    {
                      "key": "pageSize",
                      "value": "50",
                      "description": "Items per page (default: 50, max: 100)"
                    },
                    {
                      "key": "page",
                      "value": "1",
                      "description": "Page number (default: 1)"
                    },
                    {
                      "key": "sortOrder",
                      "value": "asc",
                      "description": "Sort direction (default: desc)"
                    },
                    {
                      "key": "sortBy",
                      "value": "createdAt",
                      "description": "Field to sort by (default: createdAt)"
                    },
                    {
                      "key": "dateTo",
                      "value": "2024-12-31T23:59:59Z",
                      "description": "Filter logs created before this date (ISO 8601 format)"
                    },
                    {
                      "key": "dateFrom",
                      "value": "2024-01-01T00:00:00Z",
                      "description": "Filter logs created after this date (ISO 8601 format)"
                    },
                    {
                      "key": "entityId",
                      "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                      "description": "Filter by entity ID"
                    },
                    {
                      "key": "entityType",
                      "value": "Book",
                      "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                    },
                    {
                      "key": "action",
                      "value": "book.created",
                      "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                    },
                    {
                      "key": "userId",
                      "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                      "description": "Filter by user ID"
                    }
                  ]
                },
                "description": "Retrieves system audit trail with filtering by user, action, entity, and date range. Returns paginated results with audit log details. Admin only."
              },
              "response": [
                {
                  "name": "Audit logs retrieved successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=b39420ad-5ccd-ccce-b12e-8792b6d01945&entityType=Book&action=book.created&userId=b39420ad-5ccd-ccce-b12e-8792b6d01945",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"logs\": [\n    {\n      \"id\": \"3fde3da7-27ef-a10e-d3d2-006fd3fad4fe\",\n      \"userId\": \"a7bab748-b1c8-571d-2096-e142237f3f82\",\n      \"action\": \"book.created\",\n      \"entityType\": \"Book\",\n      \"entityId\": \"951956a3-6c91-f7a8-f51e-d9ffaa5d54b3\",\n      \"changes\": {},\n      \"ipAddress\": \"192.168.1.1\",\n      \"userAgent\": \"string\",\n      \"createdAt\": \"1965-10-13T21:59:18.004Z\",\n      \"user\": {\n        \"id\": \"93317b25-9591-db16-9590-8e63093a1602\",\n        \"email\": \"HUGFmyYj@uJdKlDMgYpEizNlE.gj\",\n        \"role\": \"ADMIN\"\n      }\n    },\n    {\n      \"id\": \"52baaf6e-5390-5ddb-ce51-b4ec4396f42d\",\n      \"userId\": \"2618b668-1400-ad47-2db3-d459e5078643\",\n      \"action\": \"book.created\",\n      \"entityType\": \"Book\",\n      \"entityId\": \"a559fc9b-589b-be4b-4e12-e0e90ea9ae95\",\n      \"changes\": {},\n      \"ipAddress\": \"192.168.1.1\",\n      \"userAgent\": \"string\",\n      \"createdAt\": \"1965-01-15T07:41:28.386Z\",\n      \"user\": {\n        \"id\": \"f15ccb30-d8e4-01f4-6580-5839d6caa4e6\",\n        \"email\": \"g4ebrWkZjZ@xPkmLkxnPKILO.gtvs\",\n        \"role\": \"ADMIN\"\n      }\n    }\n  ],\n  \"pagination\": {\n    \"page\": 1,\n    \"pageSize\": 50,\n    \"totalItems\": 250,\n    \"totalPages\": 5\n  }\n}"
                },
                {
                  "name": "Invalid query parameters",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=b39420ad-5ccd-ccce-b12e-8792b6d01945&entityType=Book&action=book.created&userId=b39420ad-5ccd-ccce-b12e-8792b6d01945",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "Bad Request",
                  "code": 400,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authenticated",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=b39420ad-5ccd-ccce-b12e-8792b6d01945&entityType=Book&action=book.created&userId=b39420ad-5ccd-ccce-b12e-8792b6d01945",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                },
                {
                  "name": "Not authorized (ADMIN only)",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "Bearer <token>",
                        "description": "Added as a part of security scheme: bearer"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/api/audit-logs?pageSize=50&page=1&sortOrder=asc&sortBy=createdAt&dateTo=2024-12-31T23:59:59Z&dateFrom=2024-01-01T00:00:00Z&entityId=b39420ad-5ccd-ccce-b12e-8792b6d01945&entityType=Book&action=book.created&userId=b39420ad-5ccd-ccce-b12e-8792b6d01945",
                      "host": ["{{baseUrl}}"],
                      "path": ["api", "audit-logs"],
                      "query": [
                        {
                          "key": "pageSize",
                          "value": "50",
                          "description": "Items per page (default: 50, max: 100)"
                        },
                        {
                          "key": "page",
                          "value": "1",
                          "description": "Page number (default: 1)"
                        },
                        {
                          "key": "sortOrder",
                          "value": "asc",
                          "description": "Sort direction (default: desc)"
                        },
                        {
                          "key": "sortBy",
                          "value": "createdAt",
                          "description": "Field to sort by (default: createdAt)"
                        },
                        {
                          "key": "dateTo",
                          "value": "2024-12-31T23:59:59Z",
                          "description": "Filter logs created before this date (ISO 8601 format)"
                        },
                        {
                          "key": "dateFrom",
                          "value": "2024-01-01T00:00:00Z",
                          "description": "Filter logs created after this date (ISO 8601 format)"
                        },
                        {
                          "key": "entityId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by entity ID"
                        },
                        {
                          "key": "entityType",
                          "value": "Book",
                          "description": "Filter by entity type (e.g., \"Book\", \"Loan\", \"Member\")"
                        },
                        {
                          "key": "action",
                          "value": "book.created",
                          "description": "Filter by action (e.g., \"book.created\", \"loan.approved\")"
                        },
                        {
                          "key": "userId",
                          "value": "b39420ad-5ccd-ccce-b12e-8792b6d01945",
                          "description": "Filter by user ID"
                        }
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "text",
                  "header": [],
                  "cookie": [],
                  "body": ""
                }
              ]
            }
          ]
        },
        {
          "name": "health",
          "item": [
            {
              "name": "Health check endpoint",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": "{{baseUrl}}/api/health",
                "description": "Checks the health of system components including database and optional SMTP connectivity. Used for monitoring and deployment orchestration."
              },
              "response": [
                {
                  "name": "Health check completed successfully",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": "{{baseUrl}}/api/health"
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"status\": \"ok\",\n  \"timestamp\": \"2024-01-15T10:30:00.000Z\",\n  \"uptime\": 3600,\n  \"checks\": {\n    \"database\": {\n      \"status\": \"ok\",\n      \"latency\": 15,\n      \"error\": \"string\"\n    },\n    \"smtp\": {\n      \"status\": \"ok\",\n      \"latency\": 50,\n      \"error\": \"string\"\n    }\n  }\n}"
                }
              ]
            }
          ]
        },
        {
          "name": "App Controller get Hello",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{baseUrl}}/api"
          },
          "response": [
            {
              "name": "Untitled Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{baseUrl}}/api"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "text",
              "header": [],
              "cookie": [],
              "body": ""
            }
          ]
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    }
  ]
}
